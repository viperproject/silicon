

predicate greater0(n: Int)
{
  n > 0
}

predicate greater5(n: Int)
{
  n > 5
}

method unfoldP(n: Int)
  requires greater0(n)
{
    var x: Int := 1
    unfold greater0(n)
    x := n + x
    assert x > 1
}

method foldP(n: Int)
    requires n > 10
{
    var x: Int := 1
    fold greater0(x + n)
}

method unfoldFoldP(a: Int, b: Int)
    requires greater0(a) && greater5(b)
    ensures greater5(a + b)
{
    unfold greater0(a)
    unfold greater5(b)
    fold greater5(a + b)
}