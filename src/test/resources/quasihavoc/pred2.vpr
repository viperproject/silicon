// Testing quasihavocking with fractions of predicates

field f: Int
predicate p1(x: Ref) {
    acc(x.f)
}
predicate p2(x: Ref) {
    acc(p1(x), 1/2)
}

method foo(x: Ref)
    requires acc(x.f) && x.f == 42
{
    fold p1(x)
    fold p2(x)
    // we currently have p2(x) and acc(p1(x), 1/2)

    quasihavoc p1(x)
    unfold acc(p1(x), 1/2)
    // here we cannot assert anything about x.f

    unfold p2(x)
    unfold acc(p1(x), 1/2)
    assert x.f == 42
}
