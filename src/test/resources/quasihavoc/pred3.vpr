field f: Int

// test that we don't quasihavoc if the arguments are equal

predicate p(x: Ref, y: Ref) {
    acc(x.f) && acc(y.f)
}

method foo(x: Ref, y: Ref, a: Ref, b: Ref)
    requires acc(x.f) && acc(y.f)
{
    x.f := 3
    y.f := 4

    fold p(x, y)

    quasihavoc p(true ? a : b, b)

    unfold p(x, y)

    if (a != x && b != y) {
        assert x.f == 3 && y.f == 4
    }
}
