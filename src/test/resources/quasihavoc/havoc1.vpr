field f: Int

// Basic quasihavoc tests on fields.
// All of the following tests should verify.

method foo1(x: Ref, y: Ref)
    requires acc(x.f) && x.f == 3
    requires x != y
{
    quasihavoc y.f   // does nothing. we have no permission
    assert x.f == 3
}

method foo2(x: Ref, y: Ref)
    requires acc(x.f) && acc(y.f)
    requires x.f == 42
{
    quasihavoc y.f   // y is known to be distinct from x
    assert x.f == 42
}

method foo3(x: Ref, s: Seq[Ref])
    requires |s| >= 1 && acc(s[0].f)
    requires acc(x.f) && x.f == 42
    requires !(x in s)
{
    quasihavoc s[0].f
    assert x.f == 42
}

method foo4(x: Ref, y1: Ref, y2: Ref)
    requires acc(y1.f) && acc(y2.f)
    requires y1.f == 1 && y2.f == 2
    requires x == y1 || x == y2
{
    quasihavoc x.f
    assert y1.f == 1 || y2.f == 2
    if (x == y1) {
        assert y2.f == 2
    } else {
        assert y1.f == 1
    }
}

field b1: Bool
field b2: Bool

// Test that the snapshot is of the proper type
method foo5(x: Ref)
    requires acc(x.b1) && acc(x.b2)
{
    quasihavoc x.b1
    quasihavoc x.b2
    assert x.b1 == x.b2 || x.b1 == !x.b2
}
