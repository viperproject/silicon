domain ShStruct2[T0, T1]  {
  
  function ShStructget1of2(x: ShStruct2[T0, T1]): T1 
  
  function ShStructget0of2(x: ShStruct2[T0, T1]): T0 
  
  function ShStructrev1of2(v1: T1): ShStruct2[T0, T1] 
  
  function ShStructrev0of2(v0: T0): ShStruct2[T0, T1] 
  
  axiom {
    (forall x: ShStruct2[T0, T1] ::
      { (ShStructget1of2(x): T1) }
      (ShStructrev1of2((ShStructget1of2(x): T1)): ShStruct2[T0, T1]) == x)
  }
  
  axiom {
    (forall x: ShStruct2[T0, T1], y: ShStruct2[T0, T1] ::
      { (eq(x, y): Bool) }
      (eq(x, y): Bool) ==
      ((ShStructget0of2(x): T0) == (ShStructget0of2(y): T0) &&
      (ShStructget1of2(x): T1) == (ShStructget1of2(y): T1)))
  }
  
  axiom {
    (forall x: ShStruct2[T0, T1] ::
      { (ShStructget0of2(x): T0) }
      (ShStructrev0of2((ShStructget0of2(x): T0)): ShStruct2[T0, T1]) == x)
  }
}

domain Types  {
  
  function SCMPEcho_840d9458_T_Types(): Types 
  
  unique function Decoded_daeaf66a_T_Types_tag(): Int 
  
  function LayerType_b41831d7_T_Types(): Types 
  
  function Y$558431e4_a6ceb89d__Types(): Types 
  
  unique function SCMPPacketTooBig_840d9458_T_Types_tag(): Int 
  
  function Y$c2e55be_72f0d887__Types(): Types 
  
  unique function Y$35202e5_cd675838__Types_tag(): Int 
  
  unique function Y$17800ab4_b41831d7__Types_tag(): Int 
  
  unique function Path_c6e60a1d_T_Types_tag(): Int 
  
  unique function byte_Types_tag(): Int 
  
  unique function UDPAddr_5c610647_T_Types_tag(): Int 
  
  unique function pointer_Types_tag(): Int 
  
  unique function SCMPEcho_840d9458_T_Types_tag(): Int 
  
  unique function Y$60c7bddc_b41831d7__Types_tag(): Int 
  
  function get_0_pointer_Types(t: Types): Types 
  
  unique function Y$53a71dc3_5c610647__Types_tag(): Int 
  
  function HostSVC_cd675838_T_Types(): Types 
  
  function slice_Types(p0: Types): Types 
  
  function Path_c385169_T_Types(): Types 
  
  function Y$68d3cee9_b41831d7__Types(): Types 
  
  unique function nilDecodeFeedback_b41831d7_T_Types_tag(): Int 
  
  function Y$17800ab4_b41831d7__Types(): Types 
  
  function HostIPv6_cd675838_T_Types(): Types 
  
  function SCMPTraceroute_840d9458_T_Types(): Types 
  
  function Y$8f734176_14a7fb6d__Types(): Types 
  
  function Path_c6e60a1d_T_Types(): Types 
  
  function comparableType_Types(t: Types): Bool 
  
  unique function bigEndian_72f0d887_T_Types_tag(): Int 
  
  function SCION_840d9458_T_Types(): Types 
  
  unique function Y$49c4c25f_d3743b4f__Types_tag(): Int 
  
  function Payload_b41831d7_T_Types(): Types 
  
  unique function HostIPv6_cd675838_T_Types_tag(): Int 
  
  function HostIPv4_cd675838_T_Types(): Types 
  
  function SCMPDestinationUnreachable_840d9458_T_Types(): Types 
  
  unique function AddrType_840d9458_T_Types_tag(): Int 
  
  unique function HostIPv4_cd675838_T_Types_tag(): Int 
  
  unique function BFD_6416454f_T_Types_tag(): Int 
  
  function Y$53a71dc3_5c610647__Types(): Types 
  
  function Path_4cddb96f_T_Types(): Types 
  
  function SCMPTypeCode_840d9458_T_Types(): Types 
  
  unique function EndToEndExtn_840d9458_T_Types_tag(): Int 
  
  unique function L4ProtocolType_840d9458_T_Types_tag(): Int 
  
  unique function SCMPType_840d9458_T_Types_tag(): Int 
  
  function EndToEndExtn_840d9458_T_Types(): Types 
  
  unique function Y$9127f611_b41831d7__Types_tag(): Int 
  
  unique function SCMPDestinationUnreachable_840d9458_T_Types_tag(): Int 
  
  unique function littleEndian_72f0d887_T_Types_tag(): Int 
  
  unique function HopByHopExtnSkipper_840d9458_T_Types_tag(): Int 
  
  unique function Y$8f734176_14a7fb6d__Types_tag(): Int 
  
  unique function Y$febd64e7_b41831d7__Types_tag(): Int 
  
  unique function uint16_Types_tag(): Int 
  
  unique function HostSVC_cd675838_T_Types_tag(): Int 
  
  unique function Raw_daeaf66a_T_Types_tag(): Int 
  
  unique function SCMPTraceroute_840d9458_T_Types_tag(): Int 
  
  unique function IA_cd675838_T_Types_tag(): Int 
  
  unique function SCMPTypeCode_840d9458_T_Types_tag(): Int 
  
  function Decoded_daeaf66a_T_Types(): Types 
  
  unique function Y$558431e4_a6ceb89d__Types_tag(): Int 
  
  function bigEndian_72f0d887_T_Types(): Types 
  
  function string_Types(): Types 
  
  unique function Path_c385169_T_Types_tag(): Int 
  
  function IPAddr_5c610647_T_Types(): Types 
  
  function L4ProtocolType_840d9458_T_Types(): Types 
  
  unique function Y$9c78df5f_b41831d7__Types_tag(): Int 
  
  unique function SCMP_840d9458_T_Types_tag(): Int 
  
  unique function rawPath_a6ceb89d_T_Types_tag(): Int 
  
  unique function Y$68d3cee9_b41831d7__Types_tag(): Int 
  
  function SCMPCode_840d9458_T_Types(): Types 
  
  function Y$b28ae4_ac87dd1d__Types(): Types 
  
  unique function Y$b28ae4_ac87dd1d__Types_tag(): Int 
  
  function SCMP_840d9458_T_Types(): Types 
  
  function pointer_Types(p0: Types): Types 
  
  unique function Path_4cddb96f_T_Types_tag(): Int 
  
  unique function HostNone_cd675838_T_Types_tag(): Int 
  
  unique function Y$6914870a_b41831d7__Types_tag(): Int 
  
  function Y$6914870a_b41831d7__Types(): Types 
  
  function tag_Types(t: Types): Int 
  
  function rawPath_a6ceb89d_T_Types(): Types 
  
  function Y$49c4c25f_d3743b4f__Types(): Types 
  
  function EndToEndExtnSkipper_840d9458_T_Types(): Types 
  
  function int_Types(): Types 
  
  function Y$60c7bddc_b41831d7__Types(): Types 
  
  function uint16_Types(): Types 
  
  function integer_Types(): Types 
  
  unique function Payload_b41831d7_T_Types_tag(): Int 
  
  unique function Y$3191b69e_b41831d7__Types_tag(): Int 
  
  unique function HopByHopExtn_840d9458_T_Types_tag(): Int 
  
  function Y$9127f611_b41831d7__Types(): Types 
  
  function littleEndian_72f0d887_T_Types(): Types 
  
  unique function string_Types_tag(): Int 
  
  function Y$febd64e7_b41831d7__Types(): Types 
  
  unique function SCMPParameterProblem_840d9458_T_Types_tag(): Int 
  
  function IA_cd675838_T_Types(): Types 
  
  function AS_cd675838_T_Types(): Types 
  
  unique function LayerType_b41831d7_T_Types_tag(): Int 
  
  unique function Y$c2e55be_72f0d887__Types_tag(): Int 
  
  unique function slice_Types_tag(): Int 
  
  function SCMPParameterProblem_840d9458_T_Types(): Types 
  
  function nil_Types(): Types 
  
  function BFD_6416454f_T_Types(): Types 
  
  function nilDecodeFeedback_b41831d7_T_Types(): Types 
  
  function Y$3191b69e_b41831d7__Types(): Types 
  
  unique function SCMPInternalConnectivityDown_840d9458_T_Types_tag(): Int 
  
  function Raw_daeaf66a_T_Types(): Types 
  
  function SCMPExternalInterfaceDown_840d9458_T_Types(): Types 
  
  function empty_interface_Types(): Types 
  
  function HostNone_cd675838_T_Types(): Types 
  
  function SCMPInternalConnectivityDown_840d9458_T_Types(): Types 
  
  unique function SCMPExternalInterfaceDown_840d9458_T_Types_tag(): Int 
  
  function HopByHopExtnSkipper_840d9458_T_Types(): Types 
  
  unique function EndToEndExtnSkipper_840d9458_T_Types_tag(): Int 
  
  unique function nil_Types_tag(): Int 
  
  function SCMPPacketTooBig_840d9458_T_Types(): Types 
  
  unique function IPAddr_5c610647_T_Types_tag(): Int 
  
  unique function empty_interface_Types_tag(): Int 
  
  function AddrType_840d9458_T_Types(): Types 
  
  function behavioral_subtype_Types(l: Types, r: Types): Bool 
  
  unique function int_Types_tag(): Int 
  
  function byte_Types(): Types 
  
  function HopByHopExtn_840d9458_T_Types(): Types 
  
  function UDPAddr_5c610647_T_Types(): Types 
  
  function SCMPType_840d9458_T_Types(): Types 
  
  unique function integer_Types_tag(): Int 
  
  unique function SCMPCode_840d9458_T_Types_tag(): Int 
  
  function Y$35202e5_cd675838__Types(): Types 
  
  unique function SCION_840d9458_T_Types_tag(): Int 
  
  function Y$9c78df5f_b41831d7__Types(): Types 
  
  unique function AS_cd675838_T_Types_tag(): Int 
  
  axiom {
    tag_Types(string_Types()) == string_Types_tag()
  }
  
  axiom {
    tag_Types(HostIPv4_cd675838_T_Types()) ==
    HostIPv4_cd675838_T_Types_tag()
  }
  
  axiom {
    comparableType_Types(HostSVC_cd675838_T_Types()) == true
  }
  
  axiom {
    (forall p0: Types ::
      { slice_Types(p0) }
      tag_Types(slice_Types(p0)) == slice_Types_tag())
  }
  
  axiom {
    comparableType_Types(nil_Types()) == true
  }
  
  axiom {
    comparableType_Types(SCMPDestinationUnreachable_840d9458_T_Types()) ==
    true
  }
  
  axiom {
    tag_Types(bigEndian_72f0d887_T_Types()) ==
    bigEndian_72f0d887_T_Types_tag()
  }
  
  axiom {
    comparableType_Types(bigEndian_72f0d887_T_Types()) == true
  }
  
  axiom {
    tag_Types(rawPath_a6ceb89d_T_Types()) == rawPath_a6ceb89d_T_Types_tag()
  }
  
  axiom {
    tag_Types(EndToEndExtn_840d9458_T_Types()) ==
    EndToEndExtn_840d9458_T_Types_tag()
  }
  
  axiom {
    comparableType_Types(Y$35202e5_cd675838__Types()) == false
  }
  
  axiom {
    tag_Types(LayerType_b41831d7_T_Types()) ==
    LayerType_b41831d7_T_Types_tag()
  }
  
  axiom {
    tag_Types(Y$68d3cee9_b41831d7__Types()) ==
    Y$68d3cee9_b41831d7__Types_tag()
  }
  
  axiom {
    comparableType_Types(Path_c385169_T_Types()) == true
  }
  
  axiom {
    tag_Types(Raw_daeaf66a_T_Types()) == Raw_daeaf66a_T_Types_tag()
  }
  
  axiom {
    tag_Types(littleEndian_72f0d887_T_Types()) ==
    littleEndian_72f0d887_T_Types_tag()
  }
  
  axiom {
    (forall a: Types ::
      { behavioral_subtype_Types(a, a) }
      behavioral_subtype_Types(a, a))
  }
  
  axiom {
    comparableType_Types(int_Types()) == true
  }
  
  axiom {
    tag_Types(HopByHopExtnSkipper_840d9458_T_Types()) ==
    HopByHopExtnSkipper_840d9458_T_Types_tag()
  }
  
  axiom {
    tag_Types(L4ProtocolType_840d9458_T_Types()) ==
    L4ProtocolType_840d9458_T_Types_tag()
  }
  
  axiom {
    comparableType_Types(SCMPTypeCode_840d9458_T_Types()) == true
  }
  
  axiom {
    tag_Types(Y$9c78df5f_b41831d7__Types()) ==
    Y$9c78df5f_b41831d7__Types_tag()
  }
  
  axiom {
    comparableType_Types(integer_Types()) == true
  }
  
  axiom {
    comparableType_Types(Y$17800ab4_b41831d7__Types()) == false
  }
  
  axiom {
    comparableType_Types(Y$6914870a_b41831d7__Types()) == false
  }
  
  axiom {
    comparableType_Types(Y$68d3cee9_b41831d7__Types()) == false
  }
  
  axiom {
    comparableType_Types(UDPAddr_5c610647_T_Types()) == true
  }
  
  axiom {
    tag_Types(SCMP_840d9458_T_Types()) == SCMP_840d9458_T_Types_tag()
  }
  
  axiom {
    comparableType_Types(SCMPCode_840d9458_T_Types()) == true
  }
  
  axiom {
    tag_Types(SCMPPacketTooBig_840d9458_T_Types()) ==
    SCMPPacketTooBig_840d9458_T_Types_tag()
  }
  
  axiom {
    tag_Types(HostSVC_cd675838_T_Types()) == HostSVC_cd675838_T_Types_tag()
  }
  
  axiom {
    comparableType_Types(HostIPv6_cd675838_T_Types()) == false
  }
  
  axiom {
    comparableType_Types(Raw_daeaf66a_T_Types()) == true
  }
  
  axiom {
    comparableType_Types(Y$60c7bddc_b41831d7__Types()) == false
  }
  
  axiom {
    comparableType_Types(rawPath_a6ceb89d_T_Types()) == true
  }
  
  axiom {
    comparableType_Types(HopByHopExtnSkipper_840d9458_T_Types()) == true
  }
  
  axiom {
    tag_Types(Y$17800ab4_b41831d7__Types()) ==
    Y$17800ab4_b41831d7__Types_tag()
  }
  
  axiom {
    tag_Types(Path_c6e60a1d_T_Types()) == Path_c6e60a1d_T_Types_tag()
  }
  
  axiom {
    comparableType_Types(SCMPType_840d9458_T_Types()) == true
  }
  
  axiom {
    tag_Types(Y$9127f611_b41831d7__Types()) ==
    Y$9127f611_b41831d7__Types_tag()
  }
  
  axiom {
    comparableType_Types(HopByHopExtn_840d9458_T_Types()) == true
  }
  
  axiom {
    (forall p0: Types ::
      { pointer_Types(p0) }
      tag_Types(pointer_Types(p0)) == pointer_Types_tag())
  }
  
  axiom {
    comparableType_Types(nilDecodeFeedback_b41831d7_T_Types()) == true
  }
  
  axiom {
    comparableType_Types(Y$9c78df5f_b41831d7__Types()) == false
  }
  
  axiom {
    (forall x0: Types ::
      { pointer_Types(x0) }
      get_0_pointer_Types(pointer_Types(x0)) == x0)
  }
  
  axiom {
    tag_Types(SCMPTypeCode_840d9458_T_Types()) ==
    SCMPTypeCode_840d9458_T_Types_tag()
  }
  
  axiom {
    comparableType_Types(SCMPEcho_840d9458_T_Types()) == true
  }
  
  axiom {
    comparableType_Types(EndToEndExtnSkipper_840d9458_T_Types()) == true
  }
  
  axiom {
    comparableType_Types(Y$b28ae4_ac87dd1d__Types()) == false
  }
  
  axiom {
    comparableType_Types(string_Types()) == true
  }
  
  axiom {
    (forall a: Types, b: Types, c: Types ::
      { behavioral_subtype_Types(a, b), behavioral_subtype_Types(b, c) }
      behavioral_subtype_Types(a, b) && behavioral_subtype_Types(b, c) ==>
      behavioral_subtype_Types(a, c))
  }
  
  axiom {
    comparableType_Types(empty_interface_Types()) == false
  }
  
  axiom {
    comparableType_Types(Y$c2e55be_72f0d887__Types()) == false
  }
  
  axiom {
    comparableType_Types(Y$53a71dc3_5c610647__Types()) == false
  }
  
  axiom {
    comparableType_Types(LayerType_b41831d7_T_Types()) == true
  }
  
  axiom {
    tag_Types(AS_cd675838_T_Types()) == AS_cd675838_T_Types_tag()
  }
  
  axiom {
    tag_Types(Y$febd64e7_b41831d7__Types()) ==
    Y$febd64e7_b41831d7__Types_tag()
  }
  
  axiom {
    comparableType_Types(SCION_840d9458_T_Types()) == true
  }
  
  axiom {
    tag_Types(Y$b28ae4_ac87dd1d__Types()) == Y$b28ae4_ac87dd1d__Types_tag()
  }
  
  axiom {
    tag_Types(AddrType_840d9458_T_Types()) ==
    AddrType_840d9458_T_Types_tag()
  }
  
  axiom {
    tag_Types(Y$49c4c25f_d3743b4f__Types()) ==
    Y$49c4c25f_d3743b4f__Types_tag()
  }
  
  axiom {
    comparableType_Types(AS_cd675838_T_Types()) == true
  }
  
  axiom {
    comparableType_Types(SCMPPacketTooBig_840d9458_T_Types()) == true
  }
  
  axiom {
    comparableType_Types(Y$febd64e7_b41831d7__Types()) == false
  }
  
  axiom {
    tag_Types(SCMPEcho_840d9458_T_Types()) ==
    SCMPEcho_840d9458_T_Types_tag()
  }
  
  axiom {
    tag_Types(UDPAddr_5c610647_T_Types()) == UDPAddr_5c610647_T_Types_tag()
  }
  
  axiom {
    tag_Types(SCMPParameterProblem_840d9458_T_Types()) ==
    SCMPParameterProblem_840d9458_T_Types_tag()
  }
  
  axiom {
    (forall a: Types ::
      { behavioral_subtype_Types(a, empty_interface_Types()) }
      behavioral_subtype_Types(a, empty_interface_Types()))
  }
  
  axiom {
    tag_Types(Y$558431e4_a6ceb89d__Types()) ==
    Y$558431e4_a6ceb89d__Types_tag()
  }
  
  axiom {
    comparableType_Types(littleEndian_72f0d887_T_Types()) == true
  }
  
  axiom {
    tag_Types(EndToEndExtnSkipper_840d9458_T_Types()) ==
    EndToEndExtnSkipper_840d9458_T_Types_tag()
  }
  
  axiom {
    tag_Types(Path_4cddb96f_T_Types()) == Path_4cddb96f_T_Types_tag()
  }
  
  axiom {
    comparableType_Types(HostIPv4_cd675838_T_Types()) == false
  }
  
  axiom {
    tag_Types(SCMPInternalConnectivityDown_840d9458_T_Types()) ==
    SCMPInternalConnectivityDown_840d9458_T_Types_tag()
  }
  
  axiom {
    tag_Types(Y$60c7bddc_b41831d7__Types()) ==
    Y$60c7bddc_b41831d7__Types_tag()
  }
  
  axiom {
    comparableType_Types(EndToEndExtn_840d9458_T_Types()) == true
  }
  
  axiom {
    comparableType_Types(Payload_b41831d7_T_Types()) == false
  }
  
  axiom {
    tag_Types(integer_Types()) == integer_Types_tag()
  }
  
  axiom {
    comparableType_Types(SCMPExternalInterfaceDown_840d9458_T_Types()) ==
    true
  }
  
  axiom {
    tag_Types(SCMPExternalInterfaceDown_840d9458_T_Types()) ==
    SCMPExternalInterfaceDown_840d9458_T_Types_tag()
  }
  
  axiom {
    tag_Types(Y$53a71dc3_5c610647__Types()) ==
    Y$53a71dc3_5c610647__Types_tag()
  }
  
  axiom {
    tag_Types(SCMPType_840d9458_T_Types()) ==
    SCMPType_840d9458_T_Types_tag()
  }
  
  axiom {
    comparableType_Types(byte_Types()) == true
  }
  
  axiom {
    tag_Types(Y$6914870a_b41831d7__Types()) ==
    Y$6914870a_b41831d7__Types_tag()
  }
  
  axiom {
    tag_Types(BFD_6416454f_T_Types()) == BFD_6416454f_T_Types_tag()
  }
  
  axiom {
    comparableType_Types(Decoded_daeaf66a_T_Types()) == true
  }
  
  axiom {
    comparableType_Types(IPAddr_5c610647_T_Types()) == true
  }
  
  axiom {
    tag_Types(Path_c385169_T_Types()) == Path_c385169_T_Types_tag()
  }
  
  axiom {
    tag_Types(HostIPv6_cd675838_T_Types()) ==
    HostIPv6_cd675838_T_Types_tag()
  }
  
  axiom {
    tag_Types(byte_Types()) == byte_Types_tag()
  }
  
  axiom {
    comparableType_Types(BFD_6416454f_T_Types()) == true
  }
  
  axiom {
    tag_Types(SCMPCode_840d9458_T_Types()) ==
    SCMPCode_840d9458_T_Types_tag()
  }
  
  axiom {
    tag_Types(HopByHopExtn_840d9458_T_Types()) ==
    HopByHopExtn_840d9458_T_Types_tag()
  }
  
  axiom {
    comparableType_Types(Y$49c4c25f_d3743b4f__Types()) == false
  }
  
  axiom {
    comparableType_Types(Y$3191b69e_b41831d7__Types()) == false
  }
  
  axiom {
    comparableType_Types(SCMPParameterProblem_840d9458_T_Types()) == true
  }
  
  axiom {
    tag_Types(nil_Types()) == nil_Types_tag()
  }
  
  axiom {
    tag_Types(IPAddr_5c610647_T_Types()) == IPAddr_5c610647_T_Types_tag()
  }
  
  axiom {
    comparableType_Types(IA_cd675838_T_Types()) == true
  }
  
  axiom {
    tag_Types(SCION_840d9458_T_Types()) == SCION_840d9458_T_Types_tag()
  }
  
  axiom {
    comparableType_Types(L4ProtocolType_840d9458_T_Types()) == true
  }
  
  axiom {
    tag_Types(Y$8f734176_14a7fb6d__Types()) ==
    Y$8f734176_14a7fb6d__Types_tag()
  }
  
  axiom {
    tag_Types(Payload_b41831d7_T_Types()) == Payload_b41831d7_T_Types_tag()
  }
  
  axiom {
    tag_Types(int_Types()) == int_Types_tag()
  }
  
  axiom {
    tag_Types(SCMPTraceroute_840d9458_T_Types()) ==
    SCMPTraceroute_840d9458_T_Types_tag()
  }
  
  axiom {
    tag_Types(Decoded_daeaf66a_T_Types()) == Decoded_daeaf66a_T_Types_tag()
  }
  
  axiom {
    (forall p0: Types ::
      { comparableType_Types(slice_Types(p0)) }
      comparableType_Types(slice_Types(p0)) == false)
  }
  
  axiom {
    tag_Types(empty_interface_Types()) == empty_interface_Types_tag()
  }
  
  axiom {
    tag_Types(Y$3191b69e_b41831d7__Types()) ==
    Y$3191b69e_b41831d7__Types_tag()
  }
  
  axiom {
    comparableType_Types(SCMP_840d9458_T_Types()) == true
  }
  
  axiom {
    tag_Types(Y$c2e55be_72f0d887__Types()) ==
    Y$c2e55be_72f0d887__Types_tag()
  }
  
  axiom {
    comparableType_Types(Path_c6e60a1d_T_Types()) == true
  }
  
  axiom {
    tag_Types(HostNone_cd675838_T_Types()) ==
    HostNone_cd675838_T_Types_tag()
  }
  
  axiom {
    comparableType_Types(Y$8f734176_14a7fb6d__Types()) == false
  }
  
  axiom {
    comparableType_Types(SCMPTraceroute_840d9458_T_Types()) == true
  }
  
  axiom {
    comparableType_Types(Y$558431e4_a6ceb89d__Types()) == false
  }
  
  axiom {
    tag_Types(nilDecodeFeedback_b41831d7_T_Types()) ==
    nilDecodeFeedback_b41831d7_T_Types_tag()
  }
  
  axiom {
    tag_Types(uint16_Types()) == uint16_Types_tag()
  }
  
  axiom {
    comparableType_Types(SCMPInternalConnectivityDown_840d9458_T_Types()) ==
    true
  }
  
  axiom {
    comparableType_Types(Path_4cddb96f_T_Types()) == true
  }
  
  axiom {
    comparableType_Types(AddrType_840d9458_T_Types()) == true
  }
  
  axiom {
    comparableType_Types(uint16_Types()) == true
  }
  
  axiom {
    tag_Types(Y$35202e5_cd675838__Types()) ==
    Y$35202e5_cd675838__Types_tag()
  }
  
  axiom {
    (forall p0: Types ::
      { comparableType_Types(pointer_Types(p0)) }
      comparableType_Types(pointer_Types(p0)) == true)
  }
  
  axiom {
    tag_Types(SCMPDestinationUnreachable_840d9458_T_Types()) ==
    SCMPDestinationUnreachable_840d9458_T_Types_tag()
  }
  
  axiom {
    tag_Types(IA_cd675838_T_Types()) == IA_cd675838_T_Types_tag()
  }
  
  axiom {
    comparableType_Types(HostNone_cd675838_T_Types()) == false
  }
  
  axiom {
    comparableType_Types(Y$9127f611_b41831d7__Types()) == false
  }
}

domain Emb_8_Intbyte$$$$_E_$$$  {
  
  
}

domain ShStruct1[T0]  {
  
  function ShStructget0of1(x: ShStruct1[T0]): T0 
  
  function ShStructrev0of1(v0: T0): ShStruct1[T0] 
  
  axiom {
    (forall x: ShStruct1[T0] ::
      { (ShStructget0of1(x): T0) }
      (ShStructrev0of1((ShStructget0of1(x): T0)): ShStruct1[T0]) == x)
  }
  
  axiom {
    (forall x: ShStruct1[T0], y: ShStruct1[T0] ::
      { (eq(x, y): Bool) }
      (eq(x, y): Bool) ==
      ((ShStructget0of1(x): T0) == (ShStructget0of1(y): T0)))
  }
}

domain ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]  {
  
  function ShStructget4of17(x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]): T4 
  
  function ShStructget10of17(x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]): T10 
  
  function ShStructrev4of17(v4: T4): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] 
  
  function ShStructrev10of17(v10: T10): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] 
  
  function ShStructrev13of17(v13: T13): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] 
  
  function ShStructget5of17(x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]): T5 
  
  function ShStructrev0of17(v0: T0): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] 
  
  function ShStructrev2of17(v2: T2): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] 
  
  function ShStructrev1of17(v1: T1): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] 
  
  function ShStructget6of17(x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]): T6 
  
  function ShStructrev15of17(v15: T15): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] 
  
  function ShStructget7of17(x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]): T7 
  
  function ShStructrev14of17(v14: T14): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] 
  
  function ShStructget8of17(x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]): T8 
  
  function ShStructrev7of17(v7: T7): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] 
  
  function ShStructget2of17(x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]): T2 
  
  function ShStructget11of17(x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]): T11 
  
  function ShStructrev12of17(v12: T12): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] 
  
  function ShStructrev11of17(v11: T11): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] 
  
  function ShStructget3of17(x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]): T3 
  
  function ShStructrev9of17(v9: T9): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] 
  
  function ShStructrev8of17(v8: T8): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] 
  
  function ShStructrev5of17(v5: T5): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] 
  
  function ShStructrev3of17(v3: T3): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] 
  
  function ShStructget16of17(x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]): T16 
  
  function ShStructget14of17(x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]): T14 
  
  function ShStructget13of17(x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]): T13 
  
  function ShStructrev16of17(v16: T16): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] 
  
  function ShStructrev6of17(v6: T6): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] 
  
  function ShStructget9of17(x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]): T9 
  
  function ShStructget12of17(x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]): T12 
  
  function ShStructget0of17(x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]): T0 
  
  function ShStructget1of17(x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]): T1 
  
  function ShStructget15of17(x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]): T15 
  
  axiom {
    (forall x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] ::
      { (ShStructget10of17(x): T10) }
      (ShStructrev10of17((ShStructget10of17(x): T10)): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] ::
      { (ShStructget1of17(x): T1) }
      (ShStructrev1of17((ShStructget1of17(x): T1)): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] ::
      { (ShStructget2of17(x): T2) }
      (ShStructrev2of17((ShStructget2of17(x): T2)): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] ::
      { (ShStructget16of17(x): T16) }
      (ShStructrev16of17((ShStructget16of17(x): T16)): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] ::
      { (ShStructget8of17(x): T8) }
      (ShStructrev8of17((ShStructget8of17(x): T8)): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] ::
      { (ShStructget3of17(x): T3) }
      (ShStructrev3of17((ShStructget3of17(x): T3)): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] ::
      { (ShStructget12of17(x): T12) }
      (ShStructrev12of17((ShStructget12of17(x): T12)): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] ::
      { (ShStructget7of17(x): T7) }
      (ShStructrev7of17((ShStructget7of17(x): T7)): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] ::
      { (ShStructget11of17(x): T11) }
      (ShStructrev11of17((ShStructget11of17(x): T11)): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16],
    y: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] ::
      { (eq(x, y): Bool) }
      (eq(x, y): Bool) ==
      ((ShStructget0of17(x): T0) == (ShStructget0of17(y): T0) &&
      (ShStructget1of17(x): T1) == (ShStructget1of17(y): T1) &&
      (ShStructget2of17(x): T2) == (ShStructget2of17(y): T2) &&
      (ShStructget3of17(x): T3) == (ShStructget3of17(y): T3) &&
      (ShStructget4of17(x): T4) == (ShStructget4of17(y): T4) &&
      (ShStructget5of17(x): T5) == (ShStructget5of17(y): T5) &&
      (ShStructget6of17(x): T6) == (ShStructget6of17(y): T6) &&
      (ShStructget7of17(x): T7) == (ShStructget7of17(y): T7) &&
      (ShStructget8of17(x): T8) == (ShStructget8of17(y): T8) &&
      (ShStructget9of17(x): T9) == (ShStructget9of17(y): T9) &&
      (ShStructget10of17(x): T10) == (ShStructget10of17(y): T10) &&
      (ShStructget11of17(x): T11) == (ShStructget11of17(y): T11) &&
      (ShStructget12of17(x): T12) == (ShStructget12of17(y): T12) &&
      (ShStructget13of17(x): T13) == (ShStructget13of17(y): T13) &&
      (ShStructget14of17(x): T14) == (ShStructget14of17(y): T14) &&
      (ShStructget15of17(x): T15) == (ShStructget15of17(y): T15) &&
      (ShStructget16of17(x): T16) == (ShStructget16of17(y): T16)))
  }
  
  axiom {
    (forall x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] ::
      { (ShStructget5of17(x): T5) }
      (ShStructrev5of17((ShStructget5of17(x): T5)): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] ::
      { (ShStructget4of17(x): T4) }
      (ShStructrev4of17((ShStructget4of17(x): T4)): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] ::
      { (ShStructget6of17(x): T6) }
      (ShStructrev6of17((ShStructget6of17(x): T6)): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] ::
      { (ShStructget15of17(x): T15) }
      (ShStructrev15of17((ShStructget15of17(x): T15)): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] ::
      { (ShStructget9of17(x): T9) }
      (ShStructrev9of17((ShStructget9of17(x): T9)): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] ::
      { (ShStructget0of17(x): T0) }
      (ShStructrev0of17((ShStructget0of17(x): T0)): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] ::
      { (ShStructget14of17(x): T14) }
      (ShStructrev14of17((ShStructget14of17(x): T14)): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16] ::
      { (ShStructget13of17(x): T13) }
      (ShStructrev13of17((ShStructget13of17(x): T13)): ShStruct17[T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16]) ==
      x)
  }
}

domain Emb_6_Intbyte$$$_S_$$$  {
  
  
}

domain Emb_1_Interfaceempty_interface$$$_S_$$$  {
  
  
}

domain Slice[T]  {
  
  function sarray(s: Slice[T]): ShArray[T] 
  
  function scap(s: Slice[T]): Int 
  
  function soffset(s: Slice[T]): Int 
  
  function smake(a: ShArray[T], o: Int, l: Int, c: Int): Slice[T] 
  
  function slen(s: Slice[T]): Int 
  
  axiom deconstructor_over_constructor_array {
    (forall a: ShArray[T], o: Int, l: Int, c: Int ::
      { (sarray((smake(a, o, l, c): Slice[T])): ShArray[T]) }
      0 <= o && (0 <= l && (l <= c && o + c <= (ShArraylen(a): Int))) ==>
      (sarray((smake(a, o, l, c): Slice[T])): ShArray[T]) == a)
  }
  
  axiom {
    (forall s: Slice[T] ::
      { (soffset(s): Int), (scap(s): Int) }
      { (ShArraylen((sarray(s): ShArray[T])): Int) }
      (soffset(s): Int) + (scap(s): Int) <=
      (ShArraylen((sarray(s): ShArray[T])): Int))
  }
  
  axiom deconstructor_over_constructor_len {
    (forall a: ShArray[T], o: Int, l: Int, c: Int ::
      { (slen((smake(a, o, l, c): Slice[T])): Int) }
      0 <= o && (0 <= l && (l <= c && o + c <= (ShArraylen(a): Int))) ==>
      (slen((smake(a, o, l, c): Slice[T])): Int) == l)
  }
  
  axiom {
    (forall s: Slice[T] :: { (slen(s): Int) } 0 <= (slen(s): Int))
  }
  
  axiom {
    (forall s: Slice[T] ::
      { (slen(s): Int) }
      { (scap(s): Int) }
      (slen(s): Int) <= (scap(s): Int))
  }
  
  axiom {
    (forall s: Slice[T] :: { (soffset(s): Int) } 0 <= (soffset(s): Int))
  }
  
  axiom deconstructor_over_constructor_offset {
    (forall a: ShArray[T], o: Int, l: Int, c: Int ::
      { (soffset((smake(a, o, l, c): Slice[T])): Int) }
      0 <= o && (0 <= l && (l <= c && o + c <= (ShArraylen(a): Int))) ==>
      (soffset((smake(a, o, l, c): Slice[T])): Int) == o)
  }
  
  axiom deconstructor_over_constructor_cap {
    (forall a: ShArray[T], o: Int, l: Int, c: Int ::
      { (scap((smake(a, o, l, c): Slice[T])): Int) }
      0 <= o && (0 <= l && (l <= c && o + c <= (ShArraylen(a): Int))) ==>
      (scap((smake(a, o, l, c): Slice[T])): Int) == c)
  }
  
  axiom {
    (forall s: Slice[T] ::
      { (sarray(s): ShArray[T]) }
      { (soffset(s): Int) }
      { (slen(s): Int) }
      { (scap(s): Int) }
      s ==
      (smake((sarray(s): ShArray[T]), (soffset(s): Int), (slen(s): Int), (scap(s): Int)): Slice[T]))
  }
}

domain ShStruct6[T0, T1, T2, T3, T4, T5]  {
  
  function ShStructget1of6(x: ShStruct6[T0, T1, T2, T3, T4, T5]): T1 
  
  function ShStructget0of6(x: ShStruct6[T0, T1, T2, T3, T4, T5]): T0 
  
  function ShStructrev3of6(v3: T3): ShStruct6[T0, T1, T2, T3, T4, T5] 
  
  function ShStructrev4of6(v4: T4): ShStruct6[T0, T1, T2, T3, T4, T5] 
  
  function ShStructget5of6(x: ShStruct6[T0, T1, T2, T3, T4, T5]): T5 
  
  function ShStructget3of6(x: ShStruct6[T0, T1, T2, T3, T4, T5]): T3 
  
  function ShStructget2of6(x: ShStruct6[T0, T1, T2, T3, T4, T5]): T2 
  
  function ShStructrev0of6(v0: T0): ShStruct6[T0, T1, T2, T3, T4, T5] 
  
  function ShStructrev2of6(v2: T2): ShStruct6[T0, T1, T2, T3, T4, T5] 
  
  function ShStructrev1of6(v1: T1): ShStruct6[T0, T1, T2, T3, T4, T5] 
  
  function ShStructrev5of6(v5: T5): ShStruct6[T0, T1, T2, T3, T4, T5] 
  
  function ShStructget4of6(x: ShStruct6[T0, T1, T2, T3, T4, T5]): T4 
  
  axiom {
    (forall x: ShStruct6[T0, T1, T2, T3, T4, T5] ::
      { (ShStructget3of6(x): T3) }
      (ShStructrev3of6((ShStructget3of6(x): T3)): ShStruct6[T0, T1, T2, T3, T4, T5]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct6[T0, T1, T2, T3, T4, T5] ::
      { (ShStructget1of6(x): T1) }
      (ShStructrev1of6((ShStructget1of6(x): T1)): ShStruct6[T0, T1, T2, T3, T4, T5]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct6[T0, T1, T2, T3, T4, T5], y: ShStruct6[T0, T1, T2, T3, T4, T5] ::
      { (eq(x, y): Bool) }
      (eq(x, y): Bool) ==
      ((ShStructget0of6(x): T0) == (ShStructget0of6(y): T0) &&
      (ShStructget1of6(x): T1) == (ShStructget1of6(y): T1) &&
      (ShStructget2of6(x): T2) == (ShStructget2of6(y): T2) &&
      (ShStructget3of6(x): T3) == (ShStructget3of6(y): T3) &&
      (ShStructget4of6(x): T4) == (ShStructget4of6(y): T4) &&
      (ShStructget5of6(x): T5) == (ShStructget5of6(y): T5)))
  }
  
  axiom {
    (forall x: ShStruct6[T0, T1, T2, T3, T4, T5] ::
      { (ShStructget0of6(x): T0) }
      (ShStructrev0of6((ShStructget0of6(x): T0)): ShStruct6[T0, T1, T2, T3, T4, T5]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct6[T0, T1, T2, T3, T4, T5] ::
      { (ShStructget2of6(x): T2) }
      (ShStructrev2of6((ShStructget2of6(x): T2)): ShStruct6[T0, T1, T2, T3, T4, T5]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct6[T0, T1, T2, T3, T4, T5] ::
      { (ShStructget5of6(x): T5) }
      (ShStructrev5of6((ShStructget5of6(x): T5)): ShStruct6[T0, T1, T2, T3, T4, T5]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct6[T0, T1, T2, T3, T4, T5] ::
      { (ShStructget4of6(x): T4) }
      (ShStructrev4of6((ShStructget4of6(x): T4)): ShStruct6[T0, T1, T2, T3, T4, T5]) ==
      x)
  }
}

domain ShArray[T]  {
  
  function ShArrayloc(a: ShArray[T], i: Int): T 
  
  function ShArraysecond(r: T): Int 
  
  function ShArrayfirst(r: T): ShArray[T] 
  
  function ShArraylen(a: ShArray[T]): Int 
  
  axiom {
    (forall a: ShArray[T] ::
      { (ShArraylen(a): Int) }
      (ShArraylen(a): Int) >= 0)
  }
  
  axiom {
    (forall a: ShArray[T], i: Int ::
      { (ShArrayloc(a, i): T) }
      0 <= i && i < (ShArraylen(a): Int) ==>
      (ShArrayfirst((ShArrayloc(a, i): T)): ShArray[T]) == a &&
      (ShArraysecond((ShArrayloc(a, i): T)): Int) == i)
  }
}

domain ShStruct0  {
  
  axiom {
    (forall x: ShStruct0, y: ShStruct0 ::
      { (eq(x, y): Bool) }
      (eq(x, y): Bool) == true)
  }
}

domain Emb_8_Intbyte$$$_S_$$$  {
  
  
}

domain ShStruct5[T0, T1, T2, T3, T4]  {
  
  function ShStructget4of5(x: ShStruct5[T0, T1, T2, T3, T4]): T4 
  
  function ShStructget0of5(x: ShStruct5[T0, T1, T2, T3, T4]): T0 
  
  function ShStructrev3of5(v3: T3): ShStruct5[T0, T1, T2, T3, T4] 
  
  function ShStructrev1of5(v1: T1): ShStruct5[T0, T1, T2, T3, T4] 
  
  function ShStructrev4of5(v4: T4): ShStruct5[T0, T1, T2, T3, T4] 
  
  function ShStructget1of5(x: ShStruct5[T0, T1, T2, T3, T4]): T1 
  
  function ShStructrev2of5(v2: T2): ShStruct5[T0, T1, T2, T3, T4] 
  
  function ShStructget3of5(x: ShStruct5[T0, T1, T2, T3, T4]): T3 
  
  function ShStructrev0of5(v0: T0): ShStruct5[T0, T1, T2, T3, T4] 
  
  function ShStructget2of5(x: ShStruct5[T0, T1, T2, T3, T4]): T2 
  
  axiom {
    (forall x: ShStruct5[T0, T1, T2, T3, T4], y: ShStruct5[T0, T1, T2, T3, T4] ::
      { (eq(x, y): Bool) }
      (eq(x, y): Bool) ==
      ((ShStructget0of5(x): T0) == (ShStructget0of5(y): T0) &&
      (ShStructget1of5(x): T1) == (ShStructget1of5(y): T1) &&
      (ShStructget2of5(x): T2) == (ShStructget2of5(y): T2) &&
      (ShStructget3of5(x): T3) == (ShStructget3of5(y): T3) &&
      (ShStructget4of5(x): T4) == (ShStructget4of5(y): T4)))
  }
  
  axiom {
    (forall x: ShStruct5[T0, T1, T2, T3, T4] ::
      { (ShStructget4of5(x): T4) }
      (ShStructrev4of5((ShStructget4of5(x): T4)): ShStruct5[T0, T1, T2, T3, T4]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct5[T0, T1, T2, T3, T4] ::
      { (ShStructget1of5(x): T1) }
      (ShStructrev1of5((ShStructget1of5(x): T1)): ShStruct5[T0, T1, T2, T3, T4]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct5[T0, T1, T2, T3, T4] ::
      { (ShStructget3of5(x): T3) }
      (ShStructrev3of5((ShStructget3of5(x): T3)): ShStruct5[T0, T1, T2, T3, T4]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct5[T0, T1, T2, T3, T4] ::
      { (ShStructget2of5(x): T2) }
      (ShStructrev2of5((ShStructget2of5(x): T2)): ShStruct5[T0, T1, T2, T3, T4]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct5[T0, T1, T2, T3, T4] ::
      { (ShStructget0of5(x): T0) }
      (ShStructrev0of5((ShStructget0of5(x): T0)): ShStruct5[T0, T1, T2, T3, T4]) ==
      x)
  }
}

domain Tuple2[T0, T1]  {
  
  function tuple2(t0: T0, t1: T1): Tuple2[T0, T1] 
  
  function get0of2(p: Tuple2[T0, T1]): T0 
  
  function get1of2(p: Tuple2[T0, T1]): T1 
  
  axiom getter_over_tuple2 {
    (forall t0: T0, t1: T1 ::
      { (tuple2(t0, t1): Tuple2[T0, T1]) }
      (get0of2((tuple2(t0, t1): Tuple2[T0, T1])): T0) == t0 &&
      (get1of2((tuple2(t0, t1): Tuple2[T0, T1])): T1) == t1)
  }
  
  axiom tuple2_over_getter {
    (forall p: Tuple2[T0, T1] ::
      { (get0of2(p): T0) }
      { (get1of2(p): T1) }
      (tuple2((get0of2(p): T0), (get1of2(p): T1)): Tuple2[T0, T1]) == p)
  }
}

domain ShStruct4[T0, T1, T2, T3]  {
  
  function ShStructrev1of4(v1: T1): ShStruct4[T0, T1, T2, T3] 
  
  function ShStructget0of4(x: ShStruct4[T0, T1, T2, T3]): T0 
  
  function ShStructget2of4(x: ShStruct4[T0, T1, T2, T3]): T2 
  
  function ShStructget3of4(x: ShStruct4[T0, T1, T2, T3]): T3 
  
  function ShStructrev3of4(v3: T3): ShStruct4[T0, T1, T2, T3] 
  
  function ShStructrev2of4(v2: T2): ShStruct4[T0, T1, T2, T3] 
  
  function ShStructget1of4(x: ShStruct4[T0, T1, T2, T3]): T1 
  
  function ShStructrev0of4(v0: T0): ShStruct4[T0, T1, T2, T3] 
  
  axiom {
    (forall x: ShStruct4[T0, T1, T2, T3] ::
      { (ShStructget1of4(x): T1) }
      (ShStructrev1of4((ShStructget1of4(x): T1)): ShStruct4[T0, T1, T2, T3]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct4[T0, T1, T2, T3] ::
      { (ShStructget3of4(x): T3) }
      (ShStructrev3of4((ShStructget3of4(x): T3)): ShStruct4[T0, T1, T2, T3]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct4[T0, T1, T2, T3] ::
      { (ShStructget0of4(x): T0) }
      (ShStructrev0of4((ShStructget0of4(x): T0)): ShStruct4[T0, T1, T2, T3]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct4[T0, T1, T2, T3], y: ShStruct4[T0, T1, T2, T3] ::
      { (eq(x, y): Bool) }
      (eq(x, y): Bool) ==
      ((ShStructget0of4(x): T0) == (ShStructget0of4(y): T0) &&
      (ShStructget1of4(x): T1) == (ShStructget1of4(y): T1) &&
      (ShStructget2of4(x): T2) == (ShStructget2of4(y): T2) &&
      (ShStructget3of4(x): T3) == (ShStructget3of4(y): T3)))
  }
  
  axiom {
    (forall x: ShStruct4[T0, T1, T2, T3] ::
      { (ShStructget2of4(x): T2) }
      (ShStructrev2of4((ShStructget2of4(x): T2)): ShStruct4[T0, T1, T2, T3]) ==
      x)
  }
}

domain ShStruct3[T0, T1, T2]  {
  
  function ShStructget2of3(x: ShStruct3[T0, T1, T2]): T2 
  
  function ShStructrev1of3(v1: T1): ShStruct3[T0, T1, T2] 
  
  function ShStructrev2of3(v2: T2): ShStruct3[T0, T1, T2] 
  
  function ShStructget0of3(x: ShStruct3[T0, T1, T2]): T0 
  
  function ShStructget1of3(x: ShStruct3[T0, T1, T2]): T1 
  
  function ShStructrev0of3(v0: T0): ShStruct3[T0, T1, T2] 
  
  axiom {
    (forall x: ShStruct3[T0, T1, T2], y: ShStruct3[T0, T1, T2] ::
      { (eq(x, y): Bool) }
      (eq(x, y): Bool) ==
      ((ShStructget0of3(x): T0) == (ShStructget0of3(y): T0) &&
      (ShStructget1of3(x): T1) == (ShStructget1of3(y): T1) &&
      (ShStructget2of3(x): T2) == (ShStructget2of3(y): T2)))
  }
  
  axiom {
    (forall x: ShStruct3[T0, T1, T2] ::
      { (ShStructget1of3(x): T1) }
      (ShStructrev1of3((ShStructget1of3(x): T1)): ShStruct3[T0, T1, T2]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct3[T0, T1, T2] ::
      { (ShStructget0of3(x): T0) }
      (ShStructrev0of3((ShStructget0of3(x): T0)): ShStruct3[T0, T1, T2]) ==
      x)
  }
  
  axiom {
    (forall x: ShStruct3[T0, T1, T2] ::
      { (ShStructget2of3(x): T2) }
      (ShStructrev2of3((ShStructget2of3(x): T2)): ShStruct3[T0, T1, T2]) ==
      x)
  }
}

domain Emb_3_Intuint8$$$_S_$$$  {
  
  
}

domain Tuple0  {
  
  
}

domain Equality[T]  {
  
  function eq(l: T, r: T): Bool 
  
  axiom {
    (forall l: T, r: T ::
      { (eq(l, r): Bool) }
      (eq(l, r): Bool) == (l == r))
  }
}

domain ComparableInterfaceDomain  {
  
  function comparableInterface(i: Tuple2[Ref, Types]): Bool 
  
  axiom {
    (forall i: Tuple2[Ref, Types] ::
      { comparableInterface(i) }
      comparableType_Types((get1of2(i): Types)) ==> comparableInterface(i))
  }
}

domain WellFoundedOrder[T]  {
  
  function decreasing(arg1: T, arg2: T): Bool 
  
  function bounded(arg1: T): Bool 
}

domain Poly[T]  {
  
  function box_Poly(x: T): Ref 
  
  function unbox_Poly(y: Ref): T 
  
  axiom {
    (forall x: T ::
      { (box_Poly(x): Ref) }
      (unbox_Poly((box_Poly(x): Ref)): T) == x)
  }
}

domain String  {
  
  unique function stringLit61646472(): Int 
  
  unique function stringLit65326520657874656e73696f6e206d757374206e6f7420636f6d65206265666f7265207468652048424820657874656e73696f6e(): Int 
  
  unique function stringLit5468757273646179(): Int 
  
  unique function stringLit5765646e6573646179(): Int 
  
  unique function stringLit496e76616c6964536f7572636541646472657373(): Int 
  
  unique function stringLit45787465726e616c496e74657266616365446f776e(): Int 
  
  unique function stringLit556e6b6e6f776e4e65787448647254797065(): Int 
  
  unique function stringLit736f757263652061646472657373206d697373696e67(): Int 
  
  unique function stringLit6970(): Int 
  
  unique function stringLit756e737570706f72746564206164647265737320747970652f6c656e67746820636f6d62696e6174696f6e(): Int 
  
  unique function stringLit556e6b6e6f776e486f704279486f704f7074696f6e(): Int 
  
  unique function stringLit696e76616c696420657874656e73696f6e206865616465722e20(): Int 
  
  unique function stringLit7061636b65742069732073686f72746572207468616e2074686520636f6d6d6f6e20686561646572206c656e677468(): Int 
  
  unique function stringLit44657374696e6174696f6e556e726561636861626c65(): Int 
  
  unique function stringLit62756666657220746f6f2073686f7274(): Int 
  
  unique function stringLit5472616365726f7574655265706c79(): Int 
  
  unique function stringLit496e76616c6964457874656e73696f6e486561646572(): Int 
  
  unique function stringLit5343494f4e20686561646572206d697373696e67(): Int 
  
  unique function stringLit616464724864724c656e(): Int 
  
  unique function stringLit4e6f6e65(): Int 
  
  unique function stringLit6d696e696e756d5f6c65677468(): Int 
  
  unique function stringLit5061746845787069726564(): Int 
  
  unique function stringLit4563686f5265706c79(): Int 
  
  unique function stringLit4f63746f626572(): Int 
  
  unique function stringLit6864724279746573(): Int 
  
  unique function stringLit496e76616c6964486f704669656c644d4143(): Int 
  
  unique function stringLit65326520657874656e73696f6e206d757374206e6f74206265207265706561746564(): Int 
  
  unique function stringLit496e76616c69645365676d656e744368616e6765(): Int 
  
  unique function stringLit5061636b6574546f6f426967(): Int 
  
  unique function stringLit62696e6172792e4c6974746c65456e6469616e(): Int 
  
  unique function stringLit424644(): Int 
  
  unique function stringLit556e6b6e6f776e486f704669656c64456772657373496e74657266616365(): Int 
  
  unique function stringLit696e76616c696420657874656e73696f6e206865616465722e204c656e677468202564206c657373207468616e2032(): Int 
  
  unique function stringLit496e76616c69645061636b657453697a65(): Int 
  
  unique function stringLit5472616365726f75746552657175657374(): Int 
  
  unique function stringLit556e6b6e6f776e5061746854797065(): Int 
  
  unique function stringLit257328257329(): Int 
  
  unique function stringLit696e76616c6964206865616465722c206e6567617469766520706174684c656e(): Int 
  
  function strLen(id: Int): Int 
  
  function strConcat(l: Int, r: Int): Int 
  
  unique function stringLit456e6432456e64(): Int 
  
  unique function stringLit4c6974746c65456e6469616e(): Int 
  
  unique function stringLit4d6179(): Int 
  
  unique function stringLit486f704279486f70(): Int 
  
  unique function stringLit686561646572206c656e6774682065786365656473206d6178696d756d(): Int 
  
  unique function stringLit6d6178(): Int 
  
  unique function stringLit4a616e75617279(): Int 
  
  unique function stringLit417072696c(): Int 
  
  unique function stringLit4c656e677468202564206c657373207468616e20737065636966696564206c656e677468202564(): Int 
  
  unique function stringLit256428256429(): Int 
  
  unique function stringLit4a756e65(): Int 
  
  unique function stringLit467269646179(): Int 
  
  unique function stringLit506172616d6574657250726f626c656d(): Int 
  
  unique function stringLit63616e206e6f742063616c63756c61746520636865636b73756d20776974686f7574205343494f4e20686561646572(): Int 
  
  unique function stringLit53657074656d626572(): Int 
  
  unique function stringLit64657374696e6174696f6e2061646472657373206d697373696e67(): Int 
  
  unique function stringLit496e7465726e616c436f6e6e6563746976697479446f776e(): Int 
  
  unique function stringLit68626820657874656e73696f6e206d757374206e6f74206265207265706561746564(): Int 
  
  unique function stringLit426967456e6469616e(): Int 
  
  unique function stringLit417567757374(): Int 
  
  unique function stringLit4665627275617279(): Int 
  
  unique function stringLit446563656d626572(): Int 
  
  unique function stringLit5343494f4e20657874656e73696f6e2061637475616c206c656e677468206d757374206265206d756c7469706c65206f662034(): Int 
  
  unique function stringLit556e6b6e6f776e41646472657373466f726d6174(): Int 
  
  unique function stringLit496e76616c6964436f6d6d6f6e486561646572(): Int 
  
  unique function stringLit6c656e(): Int 
  
  unique function stringLit53756e646179(): Int 
  
  unique function stringLit556e6b6e6f776e5343494f4e56657273696f6e(): Int 
  
  unique function stringLit6d696e696d756d(): Int 
  
  unique function stringLit4e6f6e4c6f63616c44656c6976657279(): Int 
  
  unique function stringLit554e4b4e4f574e2028256429(): Int 
  
  unique function stringLit5361747572646179(): Int 
  
  unique function stringLit6578706563746564(): Int 
  
  unique function stringLit686561646572206c656e677468206973206e6f7420616e20696e7465676572206d756c7469706c65206f66206c696e65206c656e677468(): Int 
  
  unique function stringLit257328436f64653a20256429(): Int 
  
  unique function stringLit6d696e(): Int 
  
  unique function stringLit436d644864724c656e(): Int 
  
  unique function stringLit70726f76696465642062756666657220697320746f6f20736d616c6c(): Int 
  
  unique function stringLit4572726f6e656f75734865616465724669656c64(): Int 
  
  unique function stringLit466c6f7749445265717569726564(): Int 
  
  unique function stringLit4d6f6e646179(): Int 
  
  unique function stringLit4a756c79(): Int 
  
  unique function stringLit756470(): Int 
  
  unique function stringLit4563686f52657175657374(): Int 
  
  unique function stringLit(): Int 
  
  unique function stringLit496e76616c696450617468(): Int 
  
  unique function stringLit54756573646179(): Int 
  
  unique function stringLit756e737570706f727465642061646472657373(): Int 
  
  unique function stringLit544350(): Int 
  
  unique function stringLit4e6f76656d626572(): Int 
  
  unique function stringLit556e6b6e6f776e456e64546f456e644f7074696f6e(): Int 
  
  unique function stringLit74797065(): Int 
  
  unique function stringLit2573282564295c6e5061796c6f61643a202573(): Int 
  
  unique function stringLit496e76616c696441646472657373486561646572(): Int 
  
  unique function stringLit53434d50(): Int 
  
  unique function stringLit556e6b6e6f776e486f704669656c64496e6772657373496e74657266616365(): Int 
  
  unique function stringLit4d61726368(): Int 
  
  unique function stringLit4f7074696f6e206e6f7420666f756e64(): Int 
  
  unique function stringLit53434d50206c61796572206c656e677468206973206c657373207468656e2034206279746573(): Int 
  
  unique function stringLit62696e6172792e426967456e6469616e(): Int 
  
  unique function stringLit554450(): Int 
  
  unique function stringLit496e76616c696444657374696e6174696f6e41646472657373(): Int 
  
  unique function stringLit61637475616c(): Int 
  
  axiom {
    strLen(stringLit5061746845787069726564()) == 11
  }
  
  axiom {
    strLen(stringLit74797065()) == 4
  }
  
  axiom {
    strLen(stringLit6578706563746564()) == 8
  }
  
  axiom {
    strLen(stringLit756470()) == 3
  }
  
  axiom {
    strLen(stringLit436d644864724c656e()) == 9
  }
  
  axiom {
    strLen(stringLit62696e6172792e426967456e6469616e()) == 16
  }
  
  axiom {
    strLen(stringLit496e76616c696441646472657373486561646572()) == 20
  }
  
  axiom {
    strLen(stringLit257328436f64653a20256429()) == 12
  }
  
  axiom {
    strLen(stringLit4563686f52657175657374()) == 11
  }
  
  axiom {
    strLen(stringLit65326520657874656e73696f6e206d757374206e6f74206265207265706561746564()) ==
    34
  }
  
  axiom {
    strLen(stringLit686561646572206c656e6774682065786365656473206d6178696d756d()) ==
    29
  }
  
  axiom {
    strLen(stringLit496e76616c6964457874656e73696f6e486561646572()) == 22
  }
  
  axiom {
    strLen(stringLit61637475616c()) == 6
  }
  
  axiom {
    strLen(stringLit62696e6172792e4c6974746c65456e6469616e()) == 19
  }
  
  axiom {
    strLen(stringLit467269646179()) == 6
  }
  
  axiom {
    strLen(stringLit696e76616c696420657874656e73696f6e206865616465722e204c656e677468202564206c657373207468616e2032()) ==
    47
  }
  
  axiom {
    strLen(stringLit4d61726368()) == 5
  }
  
  axiom {
    strLen(stringLit70726f76696465642062756666657220697320746f6f20736d616c6c()) ==
    28
  }
  
  axiom {
    strLen(stringLit554450()) == 3
  }
  
  axiom {
    strLen(stringLit426967456e6469616e()) == 9
  }
  
  axiom {
    strLen(stringLit696e76616c6964206865616465722c206e6567617469766520706174684c656e()) ==
    32
  }
  
  axiom {
    strLen(stringLit63616e206e6f742063616c63756c61746520636865636b73756d20776974686f7574205343494f4e20686561646572()) ==
    47
  }
  
  axiom {
    strLen(stringLit53434d50206c61796572206c656e677468206973206c657373207468656e2034206279746573()) ==
    38
  }
  
  axiom {
    strLen(stringLit4a616e75617279()) == 7
  }
  
  axiom {
    strLen(stringLit4d6179()) == 3
  }
  
  axiom {
    strLen(stringLit4c656e677468202564206c657373207468616e20737065636966696564206c656e677468202564()) ==
    39
  }
  
  axiom {
    strLen(stringLit756e737570706f727465642061646472657373()) == 19
  }
  
  axiom {
    strLen(stringLit4f63746f626572()) == 7
  }
  
  axiom {
    strLen(stringLit44657374696e6174696f6e556e726561636861626c65()) == 22
  }
  
  axiom {
    strLen(stringLit496e7465726e616c436f6e6e6563746976697479446f776e()) ==
    24
  }
  
  axiom {
    strLen(stringLit556e6b6e6f776e486f704669656c64456772657373496e74657266616365()) ==
    30
  }
  
  axiom {
    strLen(stringLit466c6f7749445265717569726564()) == 14
  }
  
  axiom {
    strLen(stringLit4a756c79()) == 4
  }
  
  axiom {
    strLen(stringLit5343494f4e20657874656e73696f6e2061637475616c206c656e677468206d757374206265206d756c7469706c65206f662034()) ==
    51
  }
  
  axiom {
    strLen(stringLit424644()) == 3
  }
  
  axiom {
    strLen(stringLit486f704279486f70()) == 8
  }
  
  axiom {
    strLen(stringLit556e6b6e6f776e5061746854797065()) == 15
  }
  
  axiom {
    strLen(stringLit456e6432456e64()) == 7
  }
  
  axiom {
    strLen(stringLit53434d50()) == 4
  }
  
  axiom {
    strLen(stringLit5361747572646179()) == 8
  }
  
  axiom {
    strLen(stringLit496e76616c6964436f6d6d6f6e486561646572()) == 19
  }
  
  axiom {
    strLen(stringLit556e6b6e6f776e5343494f4e56657273696f6e()) == 19
  }
  
  axiom {
    (forall l: Int, r: Int ::
      { strLen(strConcat(l, r)) }
      strLen(strConcat(l, r)) == strLen(l) + strLen(r))
  }
  
  axiom {
    strLen(stringLit446563656d626572()) == 8
  }
  
  axiom {
    strLen(stringLit5468757273646179()) == 8
  }
  
  axiom {
    strLen(stringLit68626820657874656e73696f6e206d757374206e6f74206265207265706561746564()) ==
    34
  }
  
  axiom {
    strLen(stringLit62756666657220746f6f2073686f7274()) == 16
  }
  
  axiom {
    strLen(stringLit554e4b4e4f574e2028256429()) == 12
  }
  
  axiom {
    strLen(stringLit6970()) == 2
  }
  
  axiom {
    strLen(stringLit5472616365726f7574655265706c79()) == 15
  }
  
  axiom {
    strLen(stringLit64657374696e6174696f6e2061646472657373206d697373696e67()) ==
    27
  }
  
  axiom {
    strLen(stringLit256428256429()) == 6
  }
  
  axiom {
    strLen(stringLit7061636b65742069732073686f72746572207468616e2074686520636f6d6d6f6e20686561646572206c656e677468()) ==
    47
  }
  
  axiom {
    strLen(stringLit53657074656d626572()) == 9
  }
  
  axiom {
    strLen(stringLit4563686f5265706c79()) == 9
  }
  
  axiom {
    strLen(stringLit65326520657874656e73696f6e206d757374206e6f7420636f6d65206265666f7265207468652048424820657874656e73696f6e()) ==
    52
  }
  
  axiom {
    strLen(stringLit5061636b6574546f6f426967()) == 12
  }
  
  axiom {
    strLen(stringLit496e76616c696450617468()) == 11
  }
  
  axiom {
    strLen(stringLit556e6b6e6f776e486f704669656c64496e6772657373496e74657266616365()) ==
    31
  }
  
  axiom {
    strLen(stringLit2573282564295c6e5061796c6f61643a202573()) == 19
  }
  
  axiom {
    strLen(stringLit257328257329()) == 6
  }
  
  axiom {
    strLen(stringLit417072696c()) == 5
  }
  
  axiom {
    strLen(stringLit4665627275617279()) == 8
  }
  
  axiom {
    strLen(stringLit696e76616c696420657874656e73696f6e206865616465722e20()) ==
    26
  }
  
  axiom {
    strLen(stringLit4f7074696f6e206e6f7420666f756e64()) == 16
  }
  
  axiom {
    strLen(stringLit686561646572206c656e677468206973206e6f7420616e20696e7465676572206d756c7469706c65206f66206c696e65206c656e677468()) ==
    55
  }
  
  axiom {
    strLen(stringLit53756e646179()) == 6
  }
  
  axiom {
    strLen(stringLit45787465726e616c496e74657266616365446f776e()) == 21
  }
  
  axiom {
    strLen(stringLit4e6f76656d626572()) == 8
  }
  
  axiom {
    strLen(stringLit556e6b6e6f776e41646472657373466f726d6174()) == 20
  }
  
  axiom {
    strLen(stringLit54756573646179()) == 7
  }
  
  axiom {
    strLen(stringLit4d6f6e646179()) == 6
  }
  
  axiom {
    strLen(stringLit556e6b6e6f776e456e64546f456e644f7074696f6e()) == 21
  }
  
  axiom {
    strLen(stringLit6d696e()) == 3
  }
  
  axiom {
    strLen(stringLit6d6178()) == 3
  }
  
  axiom {
    strLen(stringLit496e76616c696444657374696e6174696f6e41646472657373()) ==
    25
  }
  
  axiom {
    strLen(stringLit616464724864724c656e()) == 10
  }
  
  axiom {
    strLen(stringLit4e6f6e4c6f63616c44656c6976657279()) == 16
  }
  
  axiom {
    strLen(stringLit5472616365726f75746552657175657374()) == 17
  }
  
  axiom {
    strLen(stringLit()) == 0
  }
  
  axiom {
    strLen(stringLit556e6b6e6f776e486f704279486f704f7074696f6e()) == 21
  }
  
  axiom {
    strLen(stringLit496e76616c6964536f7572636541646472657373()) == 20
  }
  
  axiom {
    strLen(stringLit4572726f6e656f75734865616465724669656c64()) == 20
  }
  
  axiom {
    strLen(stringLit4a756e65()) == 4
  }
  
  axiom {
    strLen(stringLit417567757374()) == 6
  }
  
  axiom {
    strLen(stringLit61646472()) == 4
  }
  
  axiom {
    strLen(stringLit4c6974746c65456e6469616e()) == 12
  }
  
  axiom {
    strLen(stringLit4e6f6e65()) == 4
  }
  
  axiom {
    strLen(stringLit6d696e696d756d()) == 7
  }
  
  axiom {
    strLen(stringLit496e76616c69645061636b657453697a65()) == 17
  }
  
  axiom {
    strLen(stringLit736f757263652061646472657373206d697373696e67()) == 22
  }
  
  axiom {
    strLen(stringLit6c656e()) == 3
  }
  
  axiom {
    strLen(stringLit756e737570706f72746564206164647265737320747970652f6c656e67746820636f6d62696e6174696f6e()) ==
    43
  }
  
  axiom {
    (forall str: Int :: { strLen(str) } 0 <= strLen(str))
  }
  
  axiom {
    strLen(stringLit5343494f4e20686561646572206d697373696e67()) == 20
  }
  
  axiom {
    strLen(stringLit496e76616c6964486f704669656c644d4143()) == 18
  }
  
  axiom {
    strLen(stringLit556e6b6e6f776e4e65787448647254797065()) == 18
  }
  
  axiom {
    strLen(stringLit5765646e6573646179()) == 9
  }
  
  axiom {
    strLen(stringLit544350()) == 3
  }
  
  axiom {
    strLen(stringLit6d696e696e756d5f6c65677468()) == 13
  }
  
  axiom {
    strLen(stringLit496e76616c69645365676d656e744368616e6765()) == 20
  }
  
  axiom {
    strLen(stringLit506172616d6574657250726f626c656d()) == 16
  }
  
  axiom {
    strLen(stringLit6864724279746573()) == 8
  }
}

domain PolyAdditionalAxioms  {
  
  axiom {
    (forall y: Tuple2[Ref, Types] ::
      { (unbox_Poly((get0of2(y): Ref)): Tuple0) }
      (get1of2(y): Types) == nilDecodeFeedback_b41831d7_T_Types() ==>
      (box_Poly((unbox_Poly((get0of2(y): Ref)): Tuple0)): Ref) ==
      (get0of2(y): Ref))
  }
  
  axiom {
    (forall y: Ref ::
      { (unbox_Poly(y): ShStruct3[ShStruct4[Ref, Ref, Ref, Ref], ShStruct6[Ref, Ref, Ref, Ref, Ref, Emb_6_Intbyte$$$_S_$$$], ShStruct6[Ref, Ref, Ref, Ref, Ref, Emb_6_Intbyte$$$_S_$$$]]) }
      (box_Poly((unbox_Poly(y): ShStruct3[ShStruct4[Ref, Ref, Ref, Ref], ShStruct6[Ref, Ref, Ref, Ref, Ref, Emb_6_Intbyte$$$_S_$$$], ShStruct6[Ref, Ref, Ref, Ref, Ref, Emb_6_Intbyte$$$_S_$$$]])): Ref) ==
      y)
  }
  
  axiom {
    (forall y: Ref ::
      { (unbox_Poly(y): ShStruct3[ShStruct3[ShStruct3[Ref, Ref, Emb_3_Intuint8$$$_S_$$$], Ref, Ref], Ref, Ref]) }
      (box_Poly((unbox_Poly(y): ShStruct3[ShStruct3[ShStruct3[Ref, Ref, Emb_3_Intuint8$$$_S_$$$], Ref, Ref], Ref, Ref])): Ref) ==
      y)
  }
  
  axiom {
    (forall y: Ref ::
      { (unbox_Poly(y): ShStruct17[ShStruct2[Ref, Ref], Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref]) }
      (box_Poly((unbox_Poly(y): ShStruct17[ShStruct2[Ref, Ref], Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref])): Ref) ==
      y)
  }
  
  axiom {
    (forall y: Ref ::
      { (unbox_Poly(y): ShStruct2[ShStruct3[ShStruct3[Ref, Ref, Emb_3_Intuint8$$$_S_$$$], Ref, Ref], Ref]) }
      (box_Poly((unbox_Poly(y): ShStruct2[ShStruct3[ShStruct3[Ref, Ref, Emb_3_Intuint8$$$_S_$$$], Ref, Ref], Ref])): Ref) ==
      y)
  }
  
  axiom {
    (forall y: Ref ::
      { (unbox_Poly(y): ShStruct2[ShStruct2[Ref, Ref], Ref]) }
      (box_Poly((unbox_Poly(y): ShStruct2[ShStruct2[Ref, Ref], Ref])): Ref) ==
      y)
  }
  
  axiom {
    (forall y: Ref ::
      { (unbox_Poly(y): ShStruct0) }
      (box_Poly((unbox_Poly(y): ShStruct0)): Ref) == y)
  }
  
  axiom {
    (forall y: Ref ::
      { (unbox_Poly(y): ShStruct5[ShStruct2[Ref, Ref], Ref, Ref, Ref, Ref]) }
      (box_Poly((unbox_Poly(y): ShStruct5[ShStruct2[Ref, Ref], Ref, Ref, Ref, Ref])): Ref) ==
      y)
  }
  
  axiom {
    (forall y: Ref ::
      { (unbox_Poly(y): Slice[Ref]) }
      (box_Poly((unbox_Poly(y): Slice[Ref])): Ref) == y)
  }
  
  axiom {
    (forall y: Ref ::
      { (unbox_Poly(y): ShStruct3[ShStruct2[Ref, Ref], Ref, Ref]) }
      (box_Poly((unbox_Poly(y): ShStruct3[ShStruct2[Ref, Ref], Ref, Ref])): Ref) ==
      y)
  }
  
  axiom {
    (forall y: Ref ::
      { (unbox_Poly(y): ShStruct1[ShStruct2[Ref, Ref]]) }
      (box_Poly((unbox_Poly(y): ShStruct1[ShStruct2[Ref, Ref]])): Ref) == y)
  }
  
  axiom {
    (forall y: Ref ::
      { (unbox_Poly(y): ShStruct4[ShStruct2[Ref, Ref], Ref, Ref, Ref]) }
      (box_Poly((unbox_Poly(y): ShStruct4[ShStruct2[Ref, Ref], Ref, Ref, Ref])): Ref) ==
      y)
  }
  
  axiom {
    (forall y: Ref ::
      { (unbox_Poly(y): Int) }
      (box_Poly((unbox_Poly(y): Int)): Ref) == y)
  }
  
  axiom {
    (forall y: Ref ::
      { (unbox_Poly(y): ShStruct2[Ref, Ref]) }
      (box_Poly((unbox_Poly(y): ShStruct2[Ref, Ref])): Ref) == y)
  }
  
  axiom {
    (forall y: Tuple2[Ref, Types] ::
      { (unbox_Poly((get0of2(y): Ref)): Tuple0) }
      (get1of2(y): Types) == Path_4cddb96f_T_Types() ==>
      (box_Poly((unbox_Poly((get0of2(y): Ref)): Tuple0)): Ref) ==
      (get0of2(y): Ref))
  }
  
  axiom {
    (forall y: Ref ::
      { (unbox_Poly(y): ShStruct2[ShStruct4[ShStruct2[Ref, Ref], Ref, Ref, Ref], Ref]) }
      (box_Poly((unbox_Poly(y): ShStruct2[ShStruct4[ShStruct2[Ref, Ref], Ref, Ref, Ref], Ref])): Ref) ==
      y)
  }
  
  axiom {
    (forall y: Ref ::
      { (unbox_Poly(y): ShStruct1[ShStruct4[ShStruct2[Ref, Ref], Ref, Ref, Ref]]) }
      (box_Poly((unbox_Poly(y): ShStruct1[ShStruct4[ShStruct2[Ref, Ref], Ref, Ref, Ref]])): Ref) ==
      y)
  }
  
  axiom {
    (forall y: Ref ::
      { (unbox_Poly(y): ShStruct3[Ref, Ref, Ref]) }
      (box_Poly((unbox_Poly(y): ShStruct3[Ref, Ref, Ref])): Ref) == y)
  }
}

domain IntWellFoundedOrder  {
  
  axiom integer_ax_bound {
    (forall int1: Int ::
      { (bounded(int1): Bool) }
      int1 >= 0 ==> (bounded(int1): Bool))
  }
  
  axiom integer_ax_dec {
    (forall int1: Int, int2: Int ::
      { (decreasing(int1, int2): Bool) }
      int1 < int2 ==> (decreasing(int1, int2): Bool))
  }
}

field SliceIntbyte$$$_S_$$$$$$$_E_$$$: Slice[Ref]

field Interfaceempty_interface$$$$_E_$$$: Tuple2[Ref, Types]

field DefinedIA_cd675838_T$$$$_E_$$$: Int

field Intbyte$$$$_E_$$$: Int

// decreases _
function unbox_Emb_1_Interfaceempty_interface$$$_S_$$$_ShArray_Ref(y: Emb_1_Interfaceempty_interface$$$_S_$$$): ShArray[Ref]
  ensures (ShArraylen(result): Int) == 1 ||
    result == arrayNil_1_Interfaceempty_interface$$$_S_$$$()
  ensures box_Emb_1_Interfaceempty_interface$$$_S_$$$_ShArray_Ref(result) ==
    y


// decreases _
function intBitwiseAnd(left: Int, right: Int): Int


// decreases _
function shStructDefault_$ContentsA_SliceIntbyte$$$_S_$$$$$$_S_$$$_PayloadA_SliceIntbyte$$$_S_$$$$$$_S_$$$$(): ShStruct2[Ref, Ref]
  ensures (ShStructget0of2(result): Ref) == null &&
    (ShStructget1of2(result): Ref) == null


// decreases _
function intShiftLeft(left: Int, right: Int): Int
  requires right >= 0


// decreases _
function arrayNil_1_Interfaceempty_interface$$$_S_$$$(): ShArray[Ref]
  ensures (ShArraylen(result): Int) == 1
  ensures (forall idx: Int ::
      { (ShArrayloc(result, idx): Ref) }
      (ShArrayloc(result, idx): Ref) == null)


// decreases _
function intShiftRight(left: Int, right: Int): Int
  requires right >= 0


function arrayDefault_8_Intbyte$$$$_E_$$$(): Emb_8_Intbyte$$$$_E_$$$
  ensures |unbox_Emb_8_Intbyte$$$$_E_$$$_Seq_Int(result)| == 8
  ensures (forall idx: Int ::
      { unbox_Emb_8_Intbyte$$$$_E_$$$_Seq_Int(result)[idx] }
      0 <= idx && idx < 8 ==>
      unbox_Emb_8_Intbyte$$$$_E_$$$_Seq_Int(result)[idx] == 0)


// decreases 
function IsDuplicableMem_a4af0e5e_SY$c04328b0_a4af0e5e_(thisItf: Tuple2[Ref, Types]): Bool
  requires !(thisItf == (tuple2(null, nil_Types()): Tuple2[Ref, Types]))
  requires acc(ErrorMem_a4af0e5e_SY$c04328b0_a4af0e5e_(thisItf), wildcard)


// decreases _
function unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(y: Emb_8_Intbyte$$$_S_$$$): ShArray[Ref]
  ensures (ShArraylen(result): Int) == 8 ||
    result == arrayNil_8_Intbyte$$$_S_$$$()
  ensures box_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(result) == y


// decreases _
function box_Emb_8_Intbyte$$$$_E_$$$_Seq_Int(x: Seq[Int]): Emb_8_Intbyte$$$$_E_$$$
  requires |x| == 8
  ensures unbox_Emb_8_Intbyte$$$$_E_$$$_Seq_Int(result) == x


// decreases _
function sliceDefault_Interfaceempty_interface$$$_S_$$$(): Slice[Ref]
  ensures (soffset(result): Int) == 0
  ensures (slen(result): Int) == 0
  ensures (scap(result): Int) == 0
  ensures (sarray(result): ShArray[Ref]) ==
    unbox_Emb_1_Interfaceempty_interface$$$_S_$$$_ShArray_Ref(box_Emb_1_Interfaceempty_interface$$$_S_$$$_ShArray_Ref(arrayNil_1_Interfaceempty_interface$$$_S_$$$()))


// decreases _
function unbox_Emb_8_Intbyte$$$$_E_$$$_Seq_Int(y: Emb_8_Intbyte$$$$_E_$$$): Seq[Int]
  ensures |result| == 8
  ensures box_Emb_8_Intbyte$$$$_E_$$$_Seq_Int(result) == y


// decreases _
function box_Emb_1_Interfaceempty_interface$$$_S_$$$_ShArray_Ref(x: ShArray[Ref]): Emb_1_Interfaceempty_interface$$$_S_$$$
  requires (ShArraylen(x): Int) == 1 ||
    x == arrayNil_1_Interfaceempty_interface$$$_S_$$$()
  ensures unbox_Emb_1_Interfaceempty_interface$$$_S_$$$_ShArray_Ref(result) ==
    x


// decreases _
function shStructDefault_$BaseLayerA_DefinedBaseLayer_840d9458_T$$$_S_$$$_VersionA_Intuint8$$$_S_$$$_TrafficClassA_Intuint8$$$_S_$$$_FlowIDA_Intuint32$$$_S_$$$_NextHdrA_DefinedL4ProtocolType_840d9458_T$$$_S_$$$_HdrLenA_Intuint8$$$_S_$$$_PayloadLenA_Intuint16$$$_S_$$$_PathTypeA_DefinedType_a6ceb89d_T$$$_S_$$$_DstAddrTypeA_DefinedAddrType_840d9458_T$$$_S_$$$_SrcAddrTypeA_DefinedAddrType_840d9458_T$$$_S_$$$_DstIAA_DefinedIA_cd675838_T$$$_S_$$$_SrcIAA_DefinedIA_cd675838_T$$$_S_$$$_RawDstAddrA_SliceIntbyte$$$_S_$$$$$$_S_$$$_RawSrcAddrA_SliceIntbyte$$$_S_$$$$$$_S_$$$_PathA_DefinedPath_a6ceb89d_T$$$_S_$$$_pathPoolA_SliceDefinedPath_a6ceb89d_T$$$_S_$$$$$$_S_$$$_pathPoolRawA_DefinedPath_a6ceb89d_T$$$_S_$$$$(): ShStruct17[ShStruct2[Ref, Ref], Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref]
  ensures (ShStructget0of17(result): ShStruct2[Ref, Ref]) ==
    shStructDefault_$ContentsA_SliceIntbyte$$$_S_$$$$$$_S_$$$_PayloadA_SliceIntbyte$$$_S_$$$$$$_S_$$$$() &&
    (ShStructget1of17(result): Ref) == null &&
    (ShStructget2of17(result): Ref) == null &&
    (ShStructget3of17(result): Ref) == null &&
    (ShStructget4of17(result): Ref) == null &&
    (ShStructget5of17(result): Ref) == null &&
    (ShStructget6of17(result): Ref) == null &&
    (ShStructget7of17(result): Ref) == null &&
    (ShStructget8of17(result): Ref) == null &&
    (ShStructget9of17(result): Ref) == null &&
    (ShStructget10of17(result): Ref) == null &&
    (ShStructget11of17(result): Ref) == null &&
    (ShStructget12of17(result): Ref) == null &&
    (ShStructget13of17(result): Ref) == null &&
    (ShStructget14of17(result): Ref) == null &&
    (ShStructget15of17(result): Ref) == null &&
    (ShStructget16of17(result): Ref) == null


// decreases _
function box_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(x: ShArray[Ref]): Emb_8_Intbyte$$$_S_$$$
  requires (ShArraylen(x): Int) == 8 || x == arrayNil_8_Intbyte$$$_S_$$$()
  ensures unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(result) == x


function ssliceFromArray_Ref(a: ShArray[Ref], i: Int, j: Int): Slice[Ref]
  requires 0 <= i
  requires i <= j
  requires j <= (ShArraylen(a): Int)
  ensures (soffset(result): Int) == i
  ensures (slen(result): Int) == j - i
  ensures (scap(result): Int) == (ShArraylen(a): Int) - i
  ensures (sarray(result): ShArray[Ref]) == a


// decreases _
function arrayNil_8_Intbyte$$$_S_$$$(): ShArray[Ref]
  ensures (ShArraylen(result): Int) == 1
  ensures (forall idx: Int ::
      { (ShArrayloc(result, idx): Ref) }
      (ShArrayloc(result, idx): Ref) == null)


function sadd(left: Int, right: Int): Int
  ensures result == left + right
{
  left + right
}

predicate AbsSlice_Bytes_e630ae22_F(s_V0: Slice[Ref], start_V0: Int, end_V0: Int) 

predicate ErrorMem_a4af0e5e_SY$c04328b0_a4af0e5e_(thisItf: Tuple2[Ref, Types]) 

// decreases 
method pseudoHeaderChecksum_840d9458_PMSCION$L$66$2(s_V0_CN0$in: ShStruct17[ShStruct2[Ref, Ref], Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref],
  csum_V1$in: Int, i_V6$in: Int, err_V0_CN4$in: Tuple2[Ref, Types])
  returns (csum_V1$out: Int)
  requires acc((ShStructget12of17(s_V0_CN0$in): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$, 1 /
    4194304) &&
    acc(AbsSlice_Bytes_e630ae22_F((ShStructget12of17(s_V0_CN0$in): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$,
    0, (slen((ShStructget12of17(s_V0_CN0$in): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int)), 1 /
    4194304)
  requires 0 <= i_V6$in &&
    i_V6$in <
    (slen((ShStructget12of17(s_V0_CN0$in): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) &&
    i_V6$in % 2 == 0 &&
    (slen((ShStructget12of17(s_V0_CN0$in): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) %
    2 ==
    0
  requires err_V0_CN4$in == (tuple2(null, nil_Types()): Tuple2[Ref, Types])
  ensures err_V0_CN4$in == (tuple2(null, nil_Types()): Tuple2[Ref, Types])
  ensures acc((ShStructget12of17(s_V0_CN0$in): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$, 1 /
    4194304) &&
    acc(AbsSlice_Bytes_e630ae22_F((ShStructget12of17(s_V0_CN0$in): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$,
    0, (slen((ShStructget12of17(s_V0_CN0$in): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int)), 1 /
    4194304)
  ensures (ShStructget12of17(s_V0_CN0$in): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$ ==
    old((ShStructget12of17(s_V0_CN0$in): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$)


// decreases 
method pseudoHeaderChecksum_840d9458_PMSCION(s_V0: ShStruct17[ShStruct2[Ref, Ref], Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref],
  length_V0: Int, protocol_V0: Int)
  returns (res_V0: Int, err_V0: Tuple2[Ref, Types])
  requires acc((ShStructget13of17(s_V0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$, 1 /
    4194304) &&
    acc((ShStructget12of17(s_V0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$, 1 /
    4194304)
  requires (slen((ShStructget13of17(s_V0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) %
    2 ==
    0 &&
    (slen((ShStructget12of17(s_V0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) %
    2 ==
    0
  requires acc((ShStructget11of17(s_V0): Ref).DefinedIA_cd675838_T$$$$_E_$$$, 1 /
    4194304) &&
    acc((ShStructget10of17(s_V0): Ref).DefinedIA_cd675838_T$$$$_E_$$$, 1 /
    4194304)
  requires acc(AbsSlice_Bytes_e630ae22_F((ShStructget13of17(s_V0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$,
    0, (slen((ShStructget13of17(s_V0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int)), 1 /
    4194304)
  requires acc(AbsSlice_Bytes_e630ae22_F((ShStructget12of17(s_V0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$,
    0, (slen((ShStructget12of17(s_V0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int)), 1 /
    4194304)
  ensures acc((ShStructget13of17(s_V0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$, 1 /
    4194304) &&
    acc((ShStructget12of17(s_V0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$, 1 /
    4194304)
  ensures acc((ShStructget11of17(s_V0): Ref).DefinedIA_cd675838_T$$$$_E_$$$, 1 /
    4194304) &&
    acc((ShStructget10of17(s_V0): Ref).DefinedIA_cd675838_T$$$$_E_$$$, 1 /
    4194304)
  ensures acc(AbsSlice_Bytes_e630ae22_F((ShStructget13of17(s_V0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$,
    0, (slen((ShStructget13of17(s_V0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int)), 1 /
    4194304)
  ensures acc(AbsSlice_Bytes_e630ae22_F((ShStructget12of17(s_V0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$,
    0, (slen((ShStructget12of17(s_V0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int)), 1 /
    4194304)
  ensures (slen((ShStructget12of17(s_V0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) ==
    0 ==>
    !(err_V0 == (tuple2(null, nil_Types()): Tuple2[Ref, Types]))
  ensures (slen((ShStructget13of17(s_V0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) ==
    0 ==>
    !(err_V0 == (tuple2(null, nil_Types()): Tuple2[Ref, Types]))
  ensures !(err_V0 == (tuple2(null, nil_Types()): Tuple2[Ref, Types])) ==>
    acc(ErrorMem_a4af0e5e_SY$c04328b0_a4af0e5e_(err_V0), write)
  ensures (slen((ShStructget12of17(s_V0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) >
    0 &&
    (slen((ShStructget13of17(s_V0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) >
    0 ==>
    err_V0 == (tuple2(null, nil_Types()): Tuple2[Ref, Types])
{
  inhale res_V0 == 0
  inhale err_V0 == (tuple2(null, nil_Types()): Tuple2[Ref, Types])
  
  // decl s_V0_CN0: *SCION_840d9458_T@°°, length_V0_CN1: int°°, protocol_V0_CN2: uint8°°, res_V0_CN3: uint32°°, err_V0_CN4: error_a4af0e5e_T°°
  var err_V0_CN4: Tuple2[Ref, Types]
  var res_V0_CN3: Int
  var protocol_V0_CN2: Int
  var length_V0_CN1: Int
  var s_V0_CN0: ShStruct17[ShStruct2[Ref, Ref], Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref]
  
  
  
  // init s_V0_CN0
  inhale s_V0_CN0 ==
    shStructDefault_$BaseLayerA_DefinedBaseLayer_840d9458_T$$$_S_$$$_VersionA_Intuint8$$$_S_$$$_TrafficClassA_Intuint8$$$_S_$$$_FlowIDA_Intuint32$$$_S_$$$_NextHdrA_DefinedL4ProtocolType_840d9458_T$$$_S_$$$_HdrLenA_Intuint8$$$_S_$$$_PayloadLenA_Intuint16$$$_S_$$$_PathTypeA_DefinedType_a6ceb89d_T$$$_S_$$$_DstAddrTypeA_DefinedAddrType_840d9458_T$$$_S_$$$_SrcAddrTypeA_DefinedAddrType_840d9458_T$$$_S_$$$_DstIAA_DefinedIA_cd675838_T$$$_S_$$$_SrcIAA_DefinedIA_cd675838_T$$$_S_$$$_RawDstAddrA_SliceIntbyte$$$_S_$$$$$$_S_$$$_RawSrcAddrA_SliceIntbyte$$$_S_$$$$$$_S_$$$_PathA_DefinedPath_a6ceb89d_T$$$_S_$$$_pathPoolA_SliceDefinedPath_a6ceb89d_T$$$_S_$$$$$$_S_$$$_pathPoolRawA_DefinedPath_a6ceb89d_T$$$_S_$$$$()
  
  // init length_V0_CN1
  inhale length_V0_CN1 == 0
  
  // init protocol_V0_CN2
  inhale protocol_V0_CN2 == 0
  
  // init res_V0_CN3
  inhale res_V0_CN3 == 0
  
  // init err_V0_CN4
  inhale err_V0_CN4 == (tuple2(null, nil_Types()): Tuple2[Ref, Types])
  
  // s_V0_CN0 = s_V0
  s_V0_CN0 := s_V0
  
  // length_V0_CN1 = length_V0
  length_V0_CN1 := length_V0
  
  // protocol_V0_CN2 = protocol_V0
  protocol_V0_CN2 := protocol_V0
  
  // decl csum_V1: uint32°°, srcIA_V1: [8]byte@@@, dstIA_V1: [8]byte@@@, rawSrcAddrLen_V1: int°°, rawDstAddrLen_V1: int°°, l_V1: uint32°°
  var l_V1: Int
  var rawDstAddrLen_V1: Int
  var rawSrcAddrLen_V1: Int
  var dstIA_V1: Emb_8_Intbyte$$$_S_$$$
  var srcIA_V1: Emb_8_Intbyte$$$_S_$$$
  var csum_V1: Int
  
  // if(len(*s_V0_CN0.RawDstAddrA) == 0) {...} else {...}
  if ((slen((ShStructget12of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) ==
  0) {
    
    // decl N5: error_a4af0e5e_T°°
    var N5: Tuple2[Ref, Types]
    
    // N5 = New_bfd5223e_F("destination address missing", (nil:[]interface{ name is empty_interface }@°))
    N5 := New_bfd5223e_F(stringLit64657374696e6174696f6e2061646472657373206d697373696e67(),
      sliceDefault_Interfaceempty_interface$$$_S_$$$())
    
    // res_V0_CN3 = 0
    res_V0_CN3 := 0
    
    // err_V0_CN4 = N5
    err_V0_CN4 := N5
    
    // return
    goto returnLabel
  }
  
  // if(len(*s_V0_CN0.RawSrcAddrA) == 0) {...} else {...}
  if ((slen((ShStructget13of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) ==
  0) {
    
    // decl N6: error_a4af0e5e_T°°
    var N6: Tuple2[Ref, Types]
    
    // N6 = New_bfd5223e_F("source address missing", (nil:[]interface{ name is empty_interface }@°))
    N6 := New_bfd5223e_F(stringLit736f757263652061646472657373206d697373696e67(),
      sliceDefault_Interfaceempty_interface$$$_S_$$$())
    
    // res_V0_CN3 = 0
    res_V0_CN3 := 0
    
    // err_V0_CN4 = N6
    err_V0_CN4 := N6
    
    // return
    goto returnLabel
  }
  
  // init csum_V1
  inhale csum_V1 == 0
  
  // csum_V1 = dflt[uint32°]
  csum_V1 := 0
  
  // init srcIA_V1
  var fn$$1: Emb_8_Intbyte$$$_S_$$$
  var fn$$2: Emb_8_Intbyte$$$$_E_$$$
  fn$$1 := srcIA_V1
  fn$$2 := arrayDefault_8_Intbyte$$$$_E_$$$()
  inhale (forall fn$$0: Int ::
      { (ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(srcIA_V1), fn$$0): Ref) }
      0 <= fn$$0 && fn$$0 < 8 ==>
      acc((ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(srcIA_V1), fn$$0): Ref).Intbyte$$$$_E_$$$, write)) &&
    ((forall fn$$3: Int ::
      { (ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(fn$$1), fn$$3): Ref) }
      { unbox_Emb_8_Intbyte$$$$_E_$$$_Seq_Int(fn$$2)[fn$$3] }
      0 <= fn$$3 && fn$$3 < 8 ==>
      (ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(fn$$1), fn$$3): Ref).Intbyte$$$$_E_$$$ ==
      unbox_Emb_8_Intbyte$$$$_E_$$$_Seq_Int(fn$$2)[fn$$3]) &&
    !(srcIA_V1 ==
    box_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(arrayNil_8_Intbyte$$$_S_$$$())))
  
  // init dstIA_V1
  var fn$$5: Emb_8_Intbyte$$$_S_$$$
  var fn$$6: Emb_8_Intbyte$$$$_E_$$$
  fn$$5 := dstIA_V1
  fn$$6 := arrayDefault_8_Intbyte$$$$_E_$$$()
  inhale (forall fn$$4: Int ::
      { (ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(dstIA_V1), fn$$4): Ref) }
      0 <= fn$$4 && fn$$4 < 8 ==>
      acc((ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(dstIA_V1), fn$$4): Ref).Intbyte$$$$_E_$$$, write)) &&
    ((forall fn$$7: Int ::
      { (ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(fn$$5), fn$$7): Ref) }
      { unbox_Emb_8_Intbyte$$$$_E_$$$_Seq_Int(fn$$6)[fn$$7] }
      0 <= fn$$7 && fn$$7 < 8 ==>
      (ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(fn$$5), fn$$7): Ref).Intbyte$$$$_E_$$$ ==
      unbox_Emb_8_Intbyte$$$$_E_$$$_Seq_Int(fn$$6)[fn$$7]) &&
    !(dstIA_V1 ==
    box_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(arrayNil_8_Intbyte$$$_S_$$$())))
  
  // srcIA_V1 = dflt[[8]byte°°]
  var fn$$9: Emb_8_Intbyte$$$_S_$$$
  var fn$$10: Emb_8_Intbyte$$$$_E_$$$
  fn$$9 := srcIA_V1
  fn$$10 := arrayDefault_8_Intbyte$$$$_E_$$$()
  exhale (forall fn$$8: Int ::
      { (ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(srcIA_V1), fn$$8): Ref) }
      0 <= fn$$8 && fn$$8 < 8 ==>
      acc((ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(srcIA_V1), fn$$8): Ref).Intbyte$$$$_E_$$$, write))
  inhale (forall fn$$8: Int ::
      { (ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(srcIA_V1), fn$$8): Ref) }
      0 <= fn$$8 && fn$$8 < 8 ==>
      acc((ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(srcIA_V1), fn$$8): Ref).Intbyte$$$$_E_$$$, write)) &&
    (forall fn$$11: Int ::
      { (ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(fn$$9), fn$$11): Ref) }
      { unbox_Emb_8_Intbyte$$$$_E_$$$_Seq_Int(fn$$10)[fn$$11] }
      0 <= fn$$11 && fn$$11 < 8 ==>
      (ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(fn$$9), fn$$11): Ref).Intbyte$$$$_E_$$$ ==
      unbox_Emb_8_Intbyte$$$$_E_$$$_Seq_Int(fn$$10)[fn$$11])
  
  // dstIA_V1 = dflt[[8]byte°°]
  var fn$$13: Emb_8_Intbyte$$$_S_$$$
  var fn$$14: Emb_8_Intbyte$$$$_E_$$$
  fn$$13 := dstIA_V1
  fn$$14 := arrayDefault_8_Intbyte$$$$_E_$$$()
  exhale (forall fn$$12: Int ::
      { (ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(dstIA_V1), fn$$12): Ref) }
      0 <= fn$$12 && fn$$12 < 8 ==>
      acc((ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(dstIA_V1), fn$$12): Ref).Intbyte$$$$_E_$$$, write))
  inhale (forall fn$$12: Int ::
      { (ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(dstIA_V1), fn$$12): Ref) }
      0 <= fn$$12 && fn$$12 < 8 ==>
      acc((ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(dstIA_V1), fn$$12): Ref).Intbyte$$$$_E_$$$, write)) &&
    (forall fn$$15: Int ::
      { (ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(fn$$13), fn$$15): Ref) }
      { unbox_Emb_8_Intbyte$$$$_E_$$$_Seq_Int(fn$$14)[fn$$15] }
      0 <= fn$$15 && fn$$15 < 8 ==>
      (ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(fn$$13), fn$$15): Ref).Intbyte$$$$_E_$$$ ==
      unbox_Emb_8_Intbyte$$$$_E_$$$_Seq_Int(fn$$14)[fn$$15])
  
  // 0PutUint64(srcIA_V1[0:len(srcIA_V1)], uint64°(*s_V0_CN0.SrcIAA))
  PutUint64_72f0d887_MbigEndian(0, ssliceFromArray_Ref(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(srcIA_V1),
    0, (ShArraylen(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(srcIA_V1)): Int)),
    (ShStructget11of17(s_V0_CN0): Ref).DefinedIA_cd675838_T$$$$_E_$$$)
  
  // 0PutUint64(dstIA_V1[0:len(dstIA_V1)], uint64°(*s_V0_CN0.DstIAA))
  PutUint64_72f0d887_MbigEndian(0, ssliceFromArray_Ref(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(dstIA_V1),
    0, (ShArraylen(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(dstIA_V1)): Int)),
    (ShStructget10of17(s_V0_CN0): Ref).DefinedIA_cd675838_T$$$$_E_$$$)
  
  // decl i_V2: int°°, L$25$1$Break
  var i_V2: Int
  
  // init i_V2
  inhale i_V2 == 0
  
  // i_V2 = 0
  i_V2 := 0
  
  // while(i_V2 < 8)
// invariant forall j_V3: int° :: { &srcIA_V1[j_V3] } 0 <= j_V3 && j_V3 < 8 ==> acc(srcIA_V1[j_V3])
// invariant forall j_V4: int° :: { &dstIA_V1[j_V4] } 0 <= j_V4 && j_V4 < 8 ==> acc(dstIA_V1[j_V4])
// invariant i_V2 % 2 == 0
// invariant 0 <= i_V2 && i_V2 <= 8
// decreases8 - i_V2 

  
  // decreases 8 - i_V2
  while (i_V2 < 8)
    invariant (forall j_V3: Int ::
        { (ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(srcIA_V1), j_V3): Ref) }
        0 <= j_V3 && j_V3 < 8 ==>
        acc((ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(srcIA_V1),
        j_V3): Ref).Intbyte$$$$_E_$$$, write))
    invariant (forall j_V4: Int ::
        { (ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(dstIA_V1), j_V4): Ref) }
        0 <= j_V4 && j_V4 < 8 ==>
        acc((ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(dstIA_V1),
        j_V4): Ref).Intbyte$$$$_E_$$$, write))
    invariant i_V2 % 2 == 0
    invariant 0 <= i_V2 && i_V2 <= 8 
  {
    var old_W7_T0: Int
    old_W7_T0 := 8 - i_V2
    
    // decl L$25$1$Continue
    
    // decl 
    
    // csum_V1 = csum_V1 + uint32°(srcIA_V1[i_V2]) << 8
    csum_V1 := csum_V1 +
      intShiftLeft((ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(srcIA_V1),
      i_V2): Ref).Intbyte$$$$_E_$$$, 8)
    
    // csum_V1 = csum_V1 + uint32°(srcIA_V1[i_V2 + 1])
    csum_V1 := csum_V1 +
      (ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(srcIA_V1), i_V2 +
      1): Ref).Intbyte$$$$_E_$$$
    
    // csum_V1 = csum_V1 + uint32°(dstIA_V1[i_V2]) << 8
    csum_V1 := csum_V1 +
      intShiftLeft((ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(dstIA_V1),
      i_V2): Ref).Intbyte$$$$_E_$$$, 8)
    
    // csum_V1 = csum_V1 + uint32°(dstIA_V1[i_V2 + 1])
    csum_V1 := csum_V1 +
      (ShArrayloc(unbox_Emb_8_Intbyte$$$_S_$$$_ShArray_Ref(dstIA_V1), i_V2 +
      1): Ref).Intbyte$$$$_E_$$$
    
    // L$25$1$Continue
    label L$25$1$Continue
    
    // i_V2 = i_V2 + 2
    i_V2 := i_V2 + 2
    if (i_V2 < 8) {
      
    }
    
    assert true && i_V2 < 8 ==>
      (decreasing(8 - i_V2, old_W7_T0): Bool) && (bounded(old_W7_T0): Bool) ||
      8 - i_V2 == old_W7_T0 && false
  }
  
  // L$25$1$Break
  label L$25$1$Break
  
  // init rawSrcAddrLen_V1
  inhale rawSrcAddrLen_V1 == 0
  
  // rawSrcAddrLen_V1 = len(*s_V0_CN0.RawSrcAddrA)
  rawSrcAddrLen_V1 := (slen((ShStructget13of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int)
  
  // decl i_V5: int°°, L$38$1$Break
  var i_V5: Int
  
  // init i_V5
  inhale i_V5 == 0
  
  // i_V5 = 0
  i_V5 := 0
  
  // while(i_V5 < len(*s_V0_CN0.RawSrcAddrA))
// invariant acc(*s_V0_CN0.RawSrcAddrA, perm(1/4194304)) && acc(AbsSlice_Bytes_e630ae22_F(*s_V0_CN0.RawSrcAddrA, 0, len(*s_V0_CN0.RawSrcAddrA)), perm(1/4194304))
// invariant len(*s_V0_CN0.RawSrcAddrA) == rawSrcAddrLen_V1
// invariant len(*s_V0_CN0.RawSrcAddrA) % 2 == 0
// invariant i_V5 % 2 == 0
// invariant 0 <= i_V5 && i_V5 <= len(*s_V0_CN0.RawSrcAddrA)
// decreaseslen(*s_V0_CN0.RawSrcAddrA) - i_V5 

  
  // decreases (slen((ShStructget13of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) - i_V5
  while (i_V5 <
  (slen((ShStructget13of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int))
    invariant acc((ShStructget13of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$, 1 /
      4194304) &&
      acc(AbsSlice_Bytes_e630ae22_F((ShStructget13of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$,
      0, (slen((ShStructget13of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int)), 1 /
      4194304)
    invariant (slen((ShStructget13of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) ==
      rawSrcAddrLen_V1
    invariant (slen((ShStructget13of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) %
      2 ==
      0
    invariant i_V5 % 2 == 0
    invariant 0 <= i_V5 &&
      i_V5 <=
      (slen((ShStructget13of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) 
  {
    var old_W8_T0: Int
    old_W8_T0 := (slen((ShStructget13of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) -
      i_V5
    
    // decl L$38$1$Continue
    
    // decl 
    
    // 
//   requires acc(*s_V0_CN0.RawSrcAddrA, perm(1/4194304)) && acc(AbsSlice_Bytes_e630ae22_F(*s_V0_CN0.RawSrcAddrA, 0, len(*s_V0_CN0.RawSrcAddrA)), perm(1/4194304))
//   requires 0 <= i_V5 && i_V5 < len(*s_V0_CN0.RawSrcAddrA) && i_V5 % 2 == 0 && len(*s_V0_CN0.RawSrcAddrA) % 2 == 0
//   requires err_V0_CN4 == (nil:error_a4af0e5e_T°)
//   ensures err_V0_CN4 == (nil:error_a4af0e5e_T°)
//   ensures acc(*s_V0_CN0.RawSrcAddrA, perm(1/4194304)) && acc(AbsSlice_Bytes_e630ae22_F(*s_V0_CN0.RawSrcAddrA, 0, len(*s_V0_CN0.RawSrcAddrA)), perm(1/4194304))
//   ensures *s_V0_CN0.RawSrcAddrA === old[before](*s_V0_CN0.RawSrcAddrA)
//   decreases  
//   outline
    csum_V1 := pseudoHeaderChecksum_840d9458_PMSCION$L$45$2(s_V0_CN0, csum_V1,
      i_V5, err_V0_CN4)
    
    // L$38$1$Continue
    label L$38$1$Continue
    
    // i_V5 = i_V5 + 2
    i_V5 := i_V5 + 2
    if (i_V5 <
    (slen((ShStructget13of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int)) {
      
    }
    
    assert true &&
      i_V5 <
      (slen((ShStructget13of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) ==>
      (decreasing((slen((ShStructget13of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) -
      i_V5, old_W8_T0): Bool) &&
      (bounded(old_W8_T0): Bool) ||
      (slen((ShStructget13of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) -
      i_V5 ==
      old_W8_T0 &&
      false
  }
  
  // L$38$1$Break
  label L$38$1$Break
  
  // init rawDstAddrLen_V1
  inhale rawDstAddrLen_V1 == 0
  
  // rawDstAddrLen_V1 = len(*s_V0_CN0.RawDstAddrA)
  rawDstAddrLen_V1 := (slen((ShStructget12of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int)
  
  // decl i_V6: int°°, L$59$1$Break
  var i_V6: Int
  
  // init i_V6
  inhale i_V6 == 0
  
  // i_V6 = 0
  i_V6 := 0
  
  // while(i_V6 < len(*s_V0_CN0.RawDstAddrA))
// invariant acc(*s_V0_CN0.RawDstAddrA, perm(1/4194304)) && acc(AbsSlice_Bytes_e630ae22_F(*s_V0_CN0.RawDstAddrA, 0, len(*s_V0_CN0.RawDstAddrA)), perm(1/4194304))
// invariant len(*s_V0_CN0.RawDstAddrA) == rawDstAddrLen_V1
// invariant len(*s_V0_CN0.RawDstAddrA) % 2 == 0
// invariant i_V6 % 2 == 0
// invariant 0 <= i_V6 && i_V6 <= len(*s_V0_CN0.RawDstAddrA)
// decreaseslen(*s_V0_CN0.RawDstAddrA) - i_V6 

  
  // decreases (slen((ShStructget12of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) - i_V6
  while (i_V6 <
  (slen((ShStructget12of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int))
    invariant acc((ShStructget12of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$, 1 /
      4194304) &&
      acc(AbsSlice_Bytes_e630ae22_F((ShStructget12of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$,
      0, (slen((ShStructget12of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int)), 1 /
      4194304)
    invariant (slen((ShStructget12of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) ==
      rawDstAddrLen_V1
    invariant (slen((ShStructget12of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) %
      2 ==
      0
    invariant i_V6 % 2 == 0
    invariant 0 <= i_V6 &&
      i_V6 <=
      (slen((ShStructget12of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) 
  {
    var old_W9_T0: Int
    old_W9_T0 := (slen((ShStructget12of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) -
      i_V6
    
    // decl L$59$1$Continue
    
    // decl 
    
    // 
//   requires acc(*s_V0_CN0.RawDstAddrA, perm(1/4194304)) && acc(AbsSlice_Bytes_e630ae22_F(*s_V0_CN0.RawDstAddrA, 0, len(*s_V0_CN0.RawDstAddrA)), perm(1/4194304))
//   requires 0 <= i_V6 && i_V6 < len(*s_V0_CN0.RawDstAddrA) && i_V6 % 2 == 0 && len(*s_V0_CN0.RawDstAddrA) % 2 == 0
//   requires err_V0_CN4 == (nil:error_a4af0e5e_T°)
//   ensures err_V0_CN4 == (nil:error_a4af0e5e_T°)
//   ensures acc(*s_V0_CN0.RawDstAddrA, perm(1/4194304)) && acc(AbsSlice_Bytes_e630ae22_F(*s_V0_CN0.RawDstAddrA, 0, len(*s_V0_CN0.RawDstAddrA)), perm(1/4194304))
//   ensures *s_V0_CN0.RawDstAddrA === old[before](*s_V0_CN0.RawDstAddrA)
//   decreases  
//   outline
    csum_V1 := pseudoHeaderChecksum_840d9458_PMSCION$L$66$2(s_V0_CN0, csum_V1,
      i_V6, err_V0_CN4)
    
    // L$59$1$Continue
    label L$59$1$Continue
    
    // i_V6 = i_V6 + 2
    i_V6 := i_V6 + 2
    if (i_V6 <
    (slen((ShStructget12of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int)) {
      
    }
    
    assert true &&
      i_V6 <
      (slen((ShStructget12of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) ==>
      (decreasing((slen((ShStructget12of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) -
      i_V6, old_W9_T0): Bool) &&
      (bounded(old_W9_T0): Bool) ||
      (slen((ShStructget12of17(s_V0_CN0): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) -
      i_V6 ==
      old_W9_T0 &&
      false
  }
  
  // L$59$1$Break
  label L$59$1$Break
  
  // init l_V1
  inhale l_V1 == 0
  
  // l_V1 = uint32°(length_V0_CN1)
  l_V1 := length_V0_CN1
  
  // csum_V1 = csum_V1 + l_V1 >> 16 + l_V1 & 0xffff
  csum_V1 := csum_V1 +
    (intShiftRight(l_V1, 16) + intBitwiseAnd(l_V1, 65535))
  
  // csum_V1 = csum_V1 + uint32°(protocol_V0_CN2)
  csum_V1 := csum_V1 + protocol_V0_CN2
  
  // res_V0_CN3 = csum_V1
  res_V0_CN3 := csum_V1
  
  // err_V0_CN4 = (nil:error_a4af0e5e_T°)
  err_V0_CN4 := (tuple2(null, nil_Types()): Tuple2[Ref, Types])
  
  // return
  goto returnLabel
  label returnLabel
  
  // res_V0 = res_V0_CN3
  res_V0 := res_V0_CN3
  
  // err_V0 = err_V0_CN4
  err_V0 := err_V0_CN4
}

// decreases 
method pseudoHeaderChecksum_840d9458_PMSCION$L$45$2(s_V0_CN0$in: ShStruct17[ShStruct2[Ref, Ref], Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref, Ref],
  csum_V1$in: Int, i_V5$in: Int, err_V0_CN4$in: Tuple2[Ref, Types])
  returns (csum_V1$out: Int)
  requires acc((ShStructget13of17(s_V0_CN0$in): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$, 1 /
    4194304) &&
    acc(AbsSlice_Bytes_e630ae22_F((ShStructget13of17(s_V0_CN0$in): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$,
    0, (slen((ShStructget13of17(s_V0_CN0$in): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int)), 1 /
    4194304)
  requires 0 <= i_V5$in &&
    i_V5$in <
    (slen((ShStructget13of17(s_V0_CN0$in): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) &&
    i_V5$in % 2 == 0 &&
    (slen((ShStructget13of17(s_V0_CN0$in): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int) %
    2 ==
    0
  requires err_V0_CN4$in == (tuple2(null, nil_Types()): Tuple2[Ref, Types])
  ensures err_V0_CN4$in == (tuple2(null, nil_Types()): Tuple2[Ref, Types])
  ensures acc((ShStructget13of17(s_V0_CN0$in): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$, 1 /
    4194304) &&
    acc(AbsSlice_Bytes_e630ae22_F((ShStructget13of17(s_V0_CN0$in): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$,
    0, (slen((ShStructget13of17(s_V0_CN0$in): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$): Int)), 1 /
    4194304)
  ensures (ShStructget13of17(s_V0_CN0$in): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$ ==
    old((ShStructget13of17(s_V0_CN0$in): Ref).SliceIntbyte$$$_S_$$$$$$$_E_$$$)


// decreases _
method PutUint64_72f0d887_MbigEndian(e_V0: Int, b_V0: Slice[Ref], v_V0: Int)
  requires acc((ShArrayloc((sarray(b_V0): ShArray[Ref]), sadd((soffset(b_V0): Int),
    0)): Ref).Intbyte$$$$_E_$$$, write) &&
    acc((ShArrayloc((sarray(b_V0): ShArray[Ref]), sadd((soffset(b_V0): Int),
    1)): Ref).Intbyte$$$$_E_$$$, write) &&
    acc((ShArrayloc((sarray(b_V0): ShArray[Ref]), sadd((soffset(b_V0): Int),
    2)): Ref).Intbyte$$$$_E_$$$, write) &&
    acc((ShArrayloc((sarray(b_V0): ShArray[Ref]), sadd((soffset(b_V0): Int),
    3)): Ref).Intbyte$$$$_E_$$$, write)
  requires acc((ShArrayloc((sarray(b_V0): ShArray[Ref]), sadd((soffset(b_V0): Int),
    4)): Ref).Intbyte$$$$_E_$$$, write) &&
    acc((ShArrayloc((sarray(b_V0): ShArray[Ref]), sadd((soffset(b_V0): Int),
    5)): Ref).Intbyte$$$$_E_$$$, write) &&
    acc((ShArrayloc((sarray(b_V0): ShArray[Ref]), sadd((soffset(b_V0): Int),
    6)): Ref).Intbyte$$$$_E_$$$, write) &&
    acc((ShArrayloc((sarray(b_V0): ShArray[Ref]), sadd((soffset(b_V0): Int),
    7)): Ref).Intbyte$$$$_E_$$$, write)
  ensures acc((ShArrayloc((sarray(b_V0): ShArray[Ref]), sadd((soffset(b_V0): Int),
    0)): Ref).Intbyte$$$$_E_$$$, write) &&
    acc((ShArrayloc((sarray(b_V0): ShArray[Ref]), sadd((soffset(b_V0): Int),
    1)): Ref).Intbyte$$$$_E_$$$, write) &&
    acc((ShArrayloc((sarray(b_V0): ShArray[Ref]), sadd((soffset(b_V0): Int),
    2)): Ref).Intbyte$$$$_E_$$$, write) &&
    acc((ShArrayloc((sarray(b_V0): ShArray[Ref]), sadd((soffset(b_V0): Int),
    3)): Ref).Intbyte$$$$_E_$$$, write)
  ensures acc((ShArrayloc((sarray(b_V0): ShArray[Ref]), sadd((soffset(b_V0): Int),
    4)): Ref).Intbyte$$$$_E_$$$, write) &&
    acc((ShArrayloc((sarray(b_V0): ShArray[Ref]), sadd((soffset(b_V0): Int),
    5)): Ref).Intbyte$$$$_E_$$$, write) &&
    acc((ShArrayloc((sarray(b_V0): ShArray[Ref]), sadd((soffset(b_V0): Int),
    6)): Ref).Intbyte$$$$_E_$$$, write) &&
    acc((ShArrayloc((sarray(b_V0): ShArray[Ref]), sadd((soffset(b_V0): Int),
    7)): Ref).Intbyte$$$$_E_$$$, write)


// decreases _
method New_bfd5223e_F(msg_V0: Int, errCtx_V0: Slice[Ref])
  returns (res_V0: Tuple2[Ref, Types])
  requires (forall i_V1: Int ::
      { (ShArrayloc((sarray(errCtx_V0): ShArray[Ref]), sadd((soffset(errCtx_V0): Int),
      i_V1)): Ref) }
      0 <= i_V1 && i_V1 < (slen(errCtx_V0): Int) ==>
      acc((ShArrayloc((sarray(errCtx_V0): ShArray[Ref]), sadd((soffset(errCtx_V0): Int),
      i_V1)): Ref).Interfaceempty_interface$$$$_E_$$$, 1 / 131072))
  ensures (forall i_V1: Int ::
      { (ShArrayloc((sarray(errCtx_V0): ShArray[Ref]), sadd((soffset(errCtx_V0): Int),
      i_V1)): Ref) }
      0 <= i_V1 && i_V1 < (slen(errCtx_V0): Int) ==>
      acc((ShArrayloc((sarray(errCtx_V0): ShArray[Ref]), sadd((soffset(errCtx_V0): Int),
      i_V1)): Ref).Interfaceempty_interface$$$$_E_$$$, 1 / 131072))
  ensures !(res_V0 == (tuple2(null, nil_Types()): Tuple2[Ref, Types])) &&
    acc(ErrorMem_a4af0e5e_SY$c04328b0_a4af0e5e_(res_V0), write)
  ensures IsDuplicableMem_a4af0e5e_SY$c04328b0_a4af0e5e_(res_V0)
