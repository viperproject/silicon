// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

/* These tests are intended to test Silicon's internal concept of 'snapshots'. */

field f: Int
field g: Bool
field b: Bool

method test1(x: Ref, bo: Bool)
  //requires b ? acc(x.f) : acc(x.g)
  //ensures b ? acc(x.f) && x.f == 0 : acc(x.g) && x.g
{
  if (bo) {
    x.f := 0
  } else {
    x.g := true
  }
}

predicate P(x: Ref) {
  acc(x.b) && (x.b ? acc(x.f) : acc(x.g))
}

method test2(x: Ref)
  //requires acc(P(x, b))
  //ensures b ? acc(x.f) : acc(x.g)
{
  //unfold acc(P(x, b))

  if (x.b) {
    x.f := x.f + 1
  } else {
    x.g := !x.g
  }
}

/*
function fun(x: Ref, bo: Bool): Bool
  requires bo ? acc(x.f) : acc(x.g)
{ bo ? x.f != 0 : !x.g }

method test3(x: Ref)
  //requires acc(P(x, b))
  //ensures acc(P(x, b))
{
  //unfold acc(P(x, b))

  var c: Bool := fun(x, x.b)

  if (x.b) {
    x.f := x.f + 1
    c := fun(x, x.b)
  } else {
    x.g := !x.g
    c := fun(x, x.b)
  }

  //fold acc(P(x, b))
}
*/