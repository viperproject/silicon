// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/


field f: Int
field g: Int
field b: Bool
field unrelatedField: Int

method unrelated(this: Ref)
    requires acc(this.unrelatedField, write)
    ensures acc(this.unrelatedField, write)
{}

predicate valid(this: Ref) {
    acc(this.b) && (this.b ? acc(this.f, write) : acc(this.g, write))
}

method t1(this: Ref)
    //requires acc(this.unrelatedField, write)
    //requires acc(valid(this), write)
    //ensures acc(valid(this), write)
{
    //unfold acc(valid(this), write)
    if (this.b) {
        this.f := 1
    } else {
        this.g := 2
    }
    //fold acc(valid(this), write)
    unrelated(this)
}

method t2(this: Ref)
    //requires acc(this.unrelatedField, write)
    //requires acc(this.f, write)
    //ensures acc(valid(this, true), write)
{
    //fold acc(valid(this, true), write)
    unrelated(this)
}