import "./sl.vpr"

method traverse1(x: Ref)
//requires list(x)
//ensures list(x)
{
    var curr: Ref := x
    //package list(curr) --* list(x)

    while (curr != null)
    //invariant list(curr)
    //invariant list(curr) --* list(x)
    {
        var old_curr: Ref := curr
        //unfold list(curr)
        curr := curr.next
        //package list(curr) --* list(x) {
            //fold list(old_curr)
            //apply list(old_curr) --* list(x)
        //}
    }
    //apply list(curr) --* list(x)
}

method traverse2(x: Ref)
//requires list(x)
//ensures list(x)
{
    if(x != null){
        var curr: Ref := x
        //package list(curr) --* list(x)
        //unfold list(curr)

        while (curr.next != null)
        //invariant acc(curr.next) && acc(curr.data)
        //invariant list(curr.next)
        //invariant list(curr) --* list(x)
        {
            var old_curr: Ref := curr            
            curr := curr.next
            //unfold list(curr)
            //package list(curr) --* list(x) {
                //fold list(old_curr)
                //apply list(old_curr) --* list(x)
            //}
        }
        //fold list(curr)
        //apply list(curr) --* list(x)

    }
}