import "./sl.vpr"

method concat(x: Ref, y: Ref) returns (res: Ref)
//requires list(x)
requires list(y)
//ensures list(res)
{
    if (x == null) {
        x := y
    } else {
        var curr: Ref := x
        //package list(curr) --* list(x)
        //unfold list(curr)
        while (curr.next != null)
        //invariant acc(curr.next) && acc(curr.data)
        //invariant list(curr.next)
        //invariant list(curr) --* list(x)
        {
            var prev: Ref := curr
            curr := curr.next
            //unfold list(curr)
            //package list(curr) --* list(x) {
            //    fold list(prev)
            //    apply list(prev) --* list(x)
            //}
        }
        curr.next := y
        //fold list(curr)
        //apply list(curr) --* list(x)
        res := x
    }
}
