import "./sl.vpr"

method concat(x: Ref, y: Ref) returns (res: Ref)
//requires list(x)
//requires list(y)
//ensures list(res)
{
    var curr: Ref
    if (x == null) {
        res := y
    } else {
        curr := x
        //package list(curr) --* list(x)
        //unfold list(curr)
        while (curr.next != null)
        //invariant acc(curr.next) && acc(curr.data)
        //invariant list(curr.next)
        //invariant list(curr) --* list(x)
        {
            var prev: Ref := curr
            curr := curr.next
            //unfold list(curr)
            //package list(curr) --* list(x) {
             //   fold list(prev)
             //   apply list(prev) --* list(x)
            //}
        }
        curr.next := y
        res := x
    }
    //if(x != null){
     //   fold list(curr)
     //   apply list(curr) --* list(x)
    //}
}
