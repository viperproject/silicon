//import "examples-16.0.vpr"

field checksumData: Int

adt Option[T] {
    Some(value: T)
    None()
}

field ocs: Option[Int]

predicate ChecksumMachineOCS(this: Ref) 
{
    acc(this.checksumData) && 0 <= this.checksumData &&
    acc(this.ocs)
}

method ChecksumOCS(this: Ref) returns (checksum: Int)
    requires ChecksumMachineOCS(this)
    //requires unfolding ChecksumMachineOCS(this) in this.ocs.isNone || this.ocs.value == Hash(this.checksumData)
    //ensures ChecksumMachineOCS(this)
    //ensures unfolding ChecksumMachineOCS(this) in this.checksumData == old(unfolding ChecksumMachineOCS(this) in this.checksumData)
    //ensures unfolding ChecksumMachineOCS(this) in checksum == Hash(this.checksumData)
    //ensures unfolding ChecksumMachineOCS(this) in this.ocs == Some(checksum)
{
    //unfold ChecksumMachineOCS(this)
    if (this.ocs.isNone)
    {
        this.ocs := Some(this.checksumData % 137)
    }
    checksum := this.ocs.value
    //fold ChecksumMachineOCS(this)
}