// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

field f: Int

define accc(rcv, fld, prm) ( forall myvar: Ref :: myvar == rcv ==> acc(myvar.fld, prm) )


method test00(x: Ref) returns (b: Bool)
  requires accc(x, f, write)
{
  while (b)
    invariant b ==> accc(x, f, 1/2)
  {
    b := !b
  }

  //:: ExpectedOutput(assert.failed:assertion.false)
  assert false
}

method test03(x: Ref) returns (b: Bool)
  requires accc(x, f, write)
  //:: ExpectedOutput(postcondition.violated:insufficient.permission)
  ensures  accc(x, f, write)
{
  while (b)
    invariant b ==> accc(x, f, 1/2)
  {
    exhale accc(x, f, 1/2)
    b := !b
  }
}

method test01(x: Ref) returns (b: Bool)
  requires accc(x, f, 1/2) && x.f > 0
{
  while (b)
    invariant x.f > 0
  {
    inhale accc(x, f, 1/2)
    b := !b
  }
}

method test02(x: Ref) returns (b: Bool)
  requires accc(x, f, write)
{
  x.f := 1

  while (x.f > 0)
    invariant true
  {
    b := !b
  }
}
