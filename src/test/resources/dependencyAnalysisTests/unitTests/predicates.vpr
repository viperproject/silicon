field f: Int

predicate greater0(n: Int){
  n > 0
}

predicate greater5(n: Int){
  n > 5
}

method foldP(n: Int)
    requires @dependency("Explicit")(n > 10)
{
    var x: Int 
    @dependency("Implicit")
    x := 1

    // $PrecisionTest: $READ_ONLY=n,x $INVARIANT=n>0

    @testAssertion("Implicit")
    fold greater0(x + n)
}

method unfoldP(n: Int)
  requires @dependency("Explicit")(greater0(n))
{
    var x: Int
    @dependency("Implicit") 
    x := 1
    @dependency("Implicit")
    unfold greater0(n)
    @dependency("Implicit")
    x := n + x

    // $PrecisionTest: $READ_ONLY=x,n $INVARIANT=x>n

    @testAssertion("Explicit")
    assert x > 1
}

method unfoldFoldP(a: Int, b: Int)
    requires @dependency("Explicit")(greater0(a)) && @dependency("Explicit")(greater5(b))
    ensures greater5(a + b)
{
    @dependency("Implicit")
    unfold greater0(a)
    @dependency("Implicit")
    unfold greater5(b)

    // $PrecisionTest: $READ_ONLY=a,b $INVARIANT=a>0

    @testAssertion("Implicit")
    fold greater5(a + b)
}

method callWithPredicate(a: Int, b: Int)
    requires @dependency("Explicit")(greater0(a)) && @dependency("Explicit")(greater5(b))
    ensures greater5(a + b)
{
    @dependency("Implicit")
    unfoldFoldP(a, b)

    // $PrecisionTest: $READ_ONLY=a,b $INVARIANT=greater5(a+b)

    @testAssertion("Explicit")
    assert greater5(a + b)
}

method unfoldPrecision(a: Int, b: Int)
    requires @irrelevant("Explicit")(greater0(a))
    requires @dependency("Explicit")(greater5(b))
    ensures greater0(b)
{
    @irrelevant("Implicit")
    unfold greater0(a)
    @dependency("Implicit")
    unfold greater5(b)

    // $PrecisionTest: $READ_ONLY=a,b $INVARIANT=b>0

    @testAssertion("Implicit")
    fold greater0(b)
}

method foldPrecision(a: Int, b: Int)
    requires @irrelevant("Explicit")(a > 5)
    requires @dependency("Explicit")(b > 5)
{
    // $PrecisionTest: $READ_ONLY=a,b $INVARIANT=a>0

    @testAssertion("Implicit")
    fold greater0(b)
}