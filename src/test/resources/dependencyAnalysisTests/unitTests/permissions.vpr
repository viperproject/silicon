field f: Int

method currentPerm(x: Ref)
    requires @dependency("Explicit")(acc(x.f, 1/2))
{
    @testAssertion("Explicit")
    assert perm(x.f) > 1/4
}

method perm1(){
    var x: Ref
    @dependency("Implicit")
    x := new(f)
    @testAssertion("Explicit")
    inhale x.f > 0
}

method perm2(){
    var x: Ref
    @dependency("Explicit")
    inhale acc(x.f, 1/2)
    @testAssertion("Explicit")
    inhale x.f > 0
}

method perm3(){
    var x: Ref
    @dependency("Explicit")
    inhale acc(x.f)
    @testAssertion("Implicit")
    x.f := x.f + 1
}

method perm4(){
    var x: Ref
    @dependency("Explicit")
    inhale acc(x.f)
    @dependency("Explicit")
    inhale x.f > 0
    @dependency("Implicit")
    x.f := x.f + 1
    @testAssertion("Explicit")
    assert x.f > 1
}

method perm5(){
    var x: Ref
    @dependency("Explicit")
    inhale acc(x.f)
    @irrelevant("Implicit")
    x.f := x.f + 1
    @testAssertion("Explicit")
    exhale acc(x.f)
}

method perm6(){
    var x: Ref
    @dependency("Explicit")
    inhale acc(x.f)
    @dependency("Explicit")
    inhale x.f > 0
    @dependency("Implicit")
    x.f := x.f + 1
    // @irrelevant("Implicit") // TODO ake
    exhale acc(x.f, 1/2)
    @testAssertion("Explicit")
    assert x.f > 1
}

method permAmount1(x: Ref, p: Perm)
  requires p > none
  requires @dependency("Explicit")(acc(x.f, p))
{
  @dependency("Explicit")
  assume p > 1/2
  @testAssertion("Explicit")
  exhale acc(x.f, 1/2)
}

method permAmount2(x: Ref, p: Perm)
  requires p > none
  requires @dependency("Explicit")(acc(x.f, p))
{
  @dependency("Explicit")
  inhale x.f > 0
  @dependency("Explicit")
  assume p > 1/2
  exhale acc(x.f, 1/2)
  @testAssertion("Explicit")
  assert x.f > 0
}


method noAlias(a: Ref, b: Ref, c: Ref)
    requires @dependency("Explicit")(acc(a.f))
    requires @dependency("Explicit")(acc(b.f, 1/2))
    requires @irrelevant("Explicit")(acc(c.f, 1/2))
{
    @testAssertion("Explicit")
    assert a != b
}

method exhaleInhale(a: Ref)
    requires @dependency("Explicit")(acc(a.f))
{
    @dependency("Implicit")
    exhale acc(a.f, 1/2)
    @dependency("Explicit")
    inhale acc(a.f, 1/2)
    @testAssertion("Explicit")
    assert perm(a.f) == 1/1
}